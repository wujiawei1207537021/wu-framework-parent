---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '2'
    k8s.eip.work/displayName: kafka监控
    k8s.eip.work/ingress: 'false'
    k8s.eip.work/service: NodePort
    k8s.eip.work/workload: monitor-kafka
  labels:
    k8s.eip.work/layer: monitor
    k8s.eip.work/name: monitor-kafka
  name: monitor-kafka
  namespace: itt-oem-shaoxing
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s.eip.work/layer: monitor
      k8s.eip.work/name: monitor-kafka
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s.eip.work/layer: monitor
        k8s.eip.work/name: monitor-kafka
    spec:
      containers:
        - image: 'docker-registry.supconit.com/library/akhq:0.16.0'
          imagePullPolicy: Always
          lifecycle: {}
          name: akhq
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /app/application.yml
              name: conf
              subPath: application.yml
      dnsConfig: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        seLinuxOptions: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: application.yml
                path: application.yml
            name: akhq
          name: conf

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    k8s.eip.work/displayName: Kafka监控
    k8s.eip.work/workload: monitor-kafka
  labels:
    k8s.eip.work/layer: monitor
    k8s.eip.work/name: monitor-kafka
  name: monitor-kafka
  namespace: itt-oem-shaoxing
spec:
  externalTrafficPolicy: Cluster
  ports:
    - name: s6m3a7
      nodePort: 30888
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    k8s.eip.work/layer: monitor
    k8s.eip.work/name: monitor-kafka
  sessionAffinity: None
  type: NodePort



---
apiVersion: v1
data:
  application.yml: |-
    akhq:
      connections:
        itt-zhangzhou:
          properties:
            bootstrap.servers: "cloud-kafka:9092"

    micronaut:
      server:
        context-path: /monitor-kafka
kind: ConfigMap
metadata:
  name: akhq
  namespace: itt-oem-shaoxing



