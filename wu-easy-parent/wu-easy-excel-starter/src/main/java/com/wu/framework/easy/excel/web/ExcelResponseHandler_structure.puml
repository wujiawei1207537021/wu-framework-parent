@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.wu.framework.easy.excel.web.ExcelResponseHandler",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_3806 { 
   	label=wu
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1512450322 { 
   	label=framework
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   AbstractEasyExcelProcessor452076030[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractEasyExcelProcessor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   TITLE_COLUMN: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createRowTitle(workbook: Workbook, hssfSheet: Sheet, easyExcelPoint: EasyExcelPoint, firstBeanClass: Class&lt;?&gt;, columnIndex: int): List&lt;EasyExcelFiledPoint&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ createSingleSheet(workbook: Workbook, easyExcel: EasyExcelPoint, beanList: List): Sheet</TD></TR>
<TR><TD ALIGN="LEFT" >+ exportExcel(excelBean: Object, easyExcelPoint: EasyExcelPoint): byte[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ isWrapClass(clazz: Class&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ mergeColumn(cellCoordinate: CellCoordinate, hssfSheet: Sheet, mergeColumnLength: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ order(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ padRowData(hssfSheet: Sheet, easyExcelPoint: EasyExcelPoint, rowData: List, rowIndex: int, columnIndex: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ processorSheet(workbook: Workbook, easyExcel: EasyExcelPoint, sheetList: List)</TD></TR>
<TR><TD ALIGN="LEFT" >+ processorSingleSheet(workbook: Workbook, easyExcel: EasyExcelPoint, beanList: List)</TD></TR>
<TR><TD ALIGN="LEFT" ># splitList(list: List, len: int): List&lt;List&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ArabicNumeralsToChineseNumerals59717778[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ArabicNumeralsToChineseNumerals</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ convert(num: long, isColloquial: boolean): String[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ cvt(num: long): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ cvt(prefix: String, suffix: String, num: long, isColloquial: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ cvt(num: long, isColloquial: boolean): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultStyle1770942808[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultStyle</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ columnStyle(styleParam: StyleParam): CellStyle</TD></TR>
<TR><TD ALIGN="LEFT" >+ titleStyle(styleParam: StyleParam): CellStyle</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DynamicEasyExcelContextHolder89138258[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DynamicEasyExcelContextHolder</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clear()</TD></TR>
<TR><TD ALIGN="LEFT" >+ peek(): List&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ poll()</TD></TR>
<TR><TD ALIGN="LEFT" >+ push(ds: List&lt;String&gt;)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DynamicLazyAttributeContextHolder1809989846[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DynamicLazyAttributeContextHolder</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clear()</TD></TR>
<TR><TD ALIGN="LEFT" >+ clear(clazz: Class)</TD></TR>
<TR><TD ALIGN="LEFT" >+ peek(clazz: Class): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ peek(): Map&lt;Class, Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ poll()</TD></TR>
<TR><TD ALIGN="LEFT" >+ push(clazz: Class, attribute: T)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EasyExcelFiledPointConvert1664931562[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EasyExcelFiledPointConvert</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ converter(annotation: EasyExcelFiled): EasyExcelFiledPoint</TD></TR>
<TR><TD ALIGN="LEFT" >+ supports(annotation: EasyExcelFiled, easyExcelFiledPoint: EasyExcelFiledPoint): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EasyExcelPointConvert1664931562[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EasyExcelPointConvert</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ converter(annotation: EasyExcel): EasyExcelPoint</TD></TR>
<TR><TD ALIGN="LEFT" >+ supports(annotation: EasyExcel, easyExcelPoint: EasyExcelPoint): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EasyFilePointConvert1664931562[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EasyFilePointConvert</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ converter(annotation: EasyFile): EasyFilePoint</TD></TR>
<TR><TD ALIGN="LEFT" >+ supports(annotation: EasyFile, easyFilePoint: EasyFilePoint): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExcelExcelServiceAdapter452076030[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExcelExcelServiceAdapter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   easyExcelProcessors: List&lt;EasyExcelProcessor&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ exportExcel(excelBean: Object, easyExcelPoint: EasyExcelPoint): byte[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ importExcel(excel: Object): List&lt;T&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ExcelResponseHandler1664495812[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ExcelResponseHandler</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   excelExcelServiceAdapter: ExcelExcelServiceAdapter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   excelPointConvert: EasyExcelPointConvert [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ beforeBodyWrite(o: Object, methodParameter: MethodParameter, mediaType: MediaType, aClass: Class&lt;? extends HttpMessageConverter&lt;?&gt;&gt;, serverHttpRequest: ServerHttpRequest, serverHttpResponse: ServerHttpResponse): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ supports(methodParameter: MethodParameter, aClass: Class&lt;? extends HttpMessageConverter&lt;?&gt;&gt;): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LockLayerAnnotationConverterAdapter232275428[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LockLayerAnnotationConverterAdapter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ converter(annotation: EasyLock): LockEndPoint</TD></TR>
<TR><TD ALIGN="LEFT" >+ supports(annotation: EasyLock, lockEndPoint: LockEndPoint): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NormalBeanEasyExcelProcessor452076030[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NormalBeanEasyExcelProcessor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   normalMapEasyExcelProcessor: NormalMapEasyExcelProcessor [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createRowTitle(workbook: Workbook, hssfSheet: Sheet, easyExcelPoint: EasyExcelPoint, firstBeanClass: Class&lt;?&gt;, columnIndex: int): List&lt;EasyExcelFiledPoint&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ handlerBeanRowTitle(easyExcelPoint: EasyExcelPoint, firstBeanClass: Class&lt;?&gt;, startColumnIndex: int): List&lt;EasyExcelFiledPoint&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ handlerCreateRowTitle(hssfSheet: Sheet, easyExcelPoint: EasyExcelPoint, excelFiledPointList: List&lt;EasyExcelFiledPoint&gt;, columnIndex: int): List&lt;EasyExcelFiledPoint&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ handlerPadOneRowData(hssfSheet: Sheet, easyExcelPoint: EasyExcelPoint, excelFiledPointList: List&lt;EasyExcelFiledPoint&gt;, rowData: Object, cellCoordinate: CellCoordinate): CellCoordinate</TD></TR>
<TR><TD ALIGN="LEFT" >+ handlerPadRowData(hssfSheet: Sheet, easyExcelPoint: EasyExcelPoint, excelFiledPointList: List&lt;EasyExcelFiledPoint&gt;, rowData: List, cellCoordinate: CellCoordinate): CellCoordinate</TD></TR>
<TR><TD ALIGN="LEFT" >+ importExcel(excel: Object): List&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ order(): int</TD></TR>
<TR><TD ALIGN="LEFT" >+ padRowData(hssfSheet: Sheet, easyExcelPoint: EasyExcelPoint, rowData: List, rowIndex: int, columnIndex: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ support(excelBean: Object): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

NormalMapEasyExcelProcessor452076030[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)NormalMapEasyExcelProcessor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createRowTitle(workbook: Workbook, hssfSheet: Sheet, easyExcelPoint: EasyExcelPoint, firstBeanClass: Class&lt;?&gt;, columnIndex: int): List&lt;EasyExcelFiledPoint&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ dynamicCreateRowTitle(hssfSheet: Sheet, columnIndex: int, columnName: Object): List&lt;EasyExcelFiledPoint&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ handlerPadOneRowData(hssfSheet: Sheet, easyExcelPoint: EasyExcelPoint, rowData: Object, cellCoordinate: CellCoordinate): CellCoordinate</TD></TR>
<TR><TD ALIGN="LEFT" >+ handlerPadRowData(hssfSheet: Sheet, easyExcelPoint: EasyExcelPoint, rowData: List, cellCoordinate: CellCoordinate): CellCoordinate</TD></TR>
<TR><TD ALIGN="LEFT" >+ importExcel(excel: Object): List&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ padRowData(hssfSheet: Sheet, easyExcelPoint: EasyExcelPoint, rowData: List, rowIndex: int, columnIndex: int)</TD></TR>
<TR><TD ALIGN="LEFT" >+ processorSingleSheet(workbook: Workbook, easyExcel: EasyExcelPoint, beanList: List)</TD></TR>
<TR><TD ALIGN="LEFT" >+ support(excelBean: Object): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SheetNumContextMethod59717778[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SheetNumContextMethod</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ sheetContext(size: long, limit: long): List&lt;String&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SheetTextContextMethod59717778[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SheetTextContextMethod</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ sheetContext(size: long, limit: long): List&lt;String&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StyleParam1770942808[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StyleParam</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   columnIndex: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   filedAnnotation: Annotation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   hssfSheet: Sheet [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   workbook: Workbook [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFiledAnnotation(filedAnnotationClass: Class&lt;T&gt;): T</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
AbstractEasyExcelProcessor452076030 -> NormalBeanEasyExcelProcessor452076030[arrowhead=none, arrowtail=empty, dir=both];
AbstractEasyExcelProcessor452076030 -> NormalMapEasyExcelProcessor452076030[arrowhead=none, arrowtail=empty, dir=both];
AbstractEasyExcelProcessor452076030 -> SheetNumContextMethod59717778[arrowhead=none];
AbstractEasyExcelProcessor452076030 -> SheetTextContextMethod59717778[arrowhead=none];
EasyExcelPointConvert1664931562 -> EasyExcelFiledPointConvert1664931562[arrowhead=none];
EasyExcelPointConvert1664931562 -> EasyFilePointConvert1664931562[arrowhead=none];
EasyExcelPointConvert1664931562 -> LockLayerAnnotationConverterAdapter232275428[arrowhead=none];
ExcelExcelServiceAdapter452076030 -> AbstractEasyExcelProcessor452076030[arrowhead=none];
ExcelExcelServiceAdapter452076030 -> NormalBeanEasyExcelProcessor452076030[arrowhead=none];
ExcelExcelServiceAdapter452076030 -> NormalMapEasyExcelProcessor452076030[arrowhead=none];
ExcelResponseHandler1664495812 -> EasyExcelPointConvert1664931562[label="excelPointConvert
[0..1]"];
ExcelResponseHandler1664495812 -> ExcelExcelServiceAdapter452076030[label="excelExcelServiceAdapter
[0..1]"];
NormalBeanEasyExcelProcessor452076030 -> DefaultStyle1770942808[arrowhead=none];
NormalBeanEasyExcelProcessor452076030 -> EasyExcelFiledPointConvert1664931562[label="handlerBeanRowTitle() -> converter()"];
NormalBeanEasyExcelProcessor452076030 -> NormalMapEasyExcelProcessor452076030[label="normalMapEasyExcelProcessor
[0..1]"];
SheetTextContextMethod59717778 -> ArabicNumeralsToChineseNumerals59717778[label="sheetContext() -> cvt()"];
    
}
@enduml