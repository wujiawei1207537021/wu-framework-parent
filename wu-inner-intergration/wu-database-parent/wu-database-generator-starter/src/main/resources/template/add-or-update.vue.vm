<template>
  <el-dialog
      :title="!dataForm.id ? '新增' : '修改'"
      :close-on-click-modal="false"
      :visible.sync="visible">
    <el-form :model="dataForm" :rules="dataRule" ref="dataForm" @keyup.enter.native="dataFormSubmit()"
             label-width="80px">
        #foreach($lazyColumn in $columns)
            #if($lazyColumn.columnName != $pk.columnName)
              <el-form-item label="${lazyColumn.comments}" prop="${lazyColumn.attrname}">
                <el-input v-model="dataForm.${lazyColumn.attrname}"
                          placeholder="${lazyColumn.comments}"></el-input>
              </el-form-item>
            #end
        #end
    </el-form>
    <span slot="footer" class="dialog-footer">
      <el-button @click="visible = false">取消</el-button>
      <el-button type="primary" @click="dataFormSubmit()">确定</el-button>
    </span>
  </el-dialog>
</template>

<script>
  export default {
    data() {
      return {
        visible: false,
        dataForm: {
            #foreach($lazyColumn in $columns)
                #if($lazyColumn.columnName == $pk.columnName)
                        ${lazyColumn.attrname}:
                      0,
                #else
                        ${lazyColumn.attrname}: ''#if($velocityCount != $columns.size()),#end

                #end
            #end
        },
        dataRule: {
            #foreach($lazyColumn in $columns)
                #if($lazyColumn.columnName != $pk.columnName)
                        ${lazyColumn.attrname}: [
                    {required: true, record: '${lazyColumn.comments}不能为空', trigger: 'blur'}
                  ]#if($velocityCount != $columns.size()),#end

                #end
            #end
        }
      }
    },
    methods: {
      init(id) {
        this.dataForm.${pk.attrname} = id || 0
        this.visible = true
        this.$nextTick(() => {
          this.$refs['dataForm'].resetFields()
          if (this.dataForm.${pk.attrname}) {
            this.$http({
              url:
          #
            [[this.$http.adornUrl]]
          #
            (`/${moduleName}/${pathName}/info/#[[$]]#{this.dataForm.${pk.attrname}}`),
                method
          :
            'get',
          #
            [[params
          :
            this.$http.adornParams()
          ]]
          #
          }).
            then(({data}) => {
              if (data && data.code === 0) {
                  #foreach($lazyColumn in $columns)
                      #if($lazyColumn.columnName != $pk.columnName)
                        this.dataForm.$
                        {
                          lazyColumn.attrname
                        }
                        = data.$
                        {
                          pathName
                        }
                      .
                        $
                        {
                          lazyColumn.attrname
                        }
                      #end
                  #end
              }
            })
          }
        })
      },
      // 表单提交
      dataFormSubmit() {
      #
        [[this.$refs['dataForm'].validate((valid) => {]]
        #
        if(valid)
        {
        this.$http({
        url: #[[this.$http.adornUrl]]
        #(`/${moduleName}/${pathName}/${!this.dataForm.${pk.attrname} ? 'save' : 'update'}`),
        method
        :
        'post',
        #[[data
        :
        this.$http.adornData({
            ]]
            #
            #foreach($lazyColumn in $columns)
            #if($lazyColumn.columnName == $pk.columnName)
                '${lazyColumn.attrname}'
            :
            this.dataForm.$
            {
            lazyColumn.attrname
            }
            ||
            undefined,
            #else
                '${lazyColumn.attrname}'
            :
            this.dataForm.$
            {
            lazyColumn.attrname
            }
            #if($velocityCount != $columns.size()), #end

            #end
            #end
            })
        }).
        then(({data}) => {
        if (data && data.code === 0) {
        #[[this.$record({]]
        #
        record
        :
        '操作成功',
        type
        :
        'success',
        duration
        :
        1500,
        onClose
        :
        () => {
        this.visible = false
        #[[this.$emit('refreshDataList')]]
        #
        }
        })
        } else {
        #[[this.$record.error(data.msg)]]
        #
        }
        })
        }
        })
      }
    }
  }
</script>
