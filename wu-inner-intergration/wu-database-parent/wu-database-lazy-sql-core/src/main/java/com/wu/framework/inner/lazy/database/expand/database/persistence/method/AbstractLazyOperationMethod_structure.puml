@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.wu.framework.inner.lazy.database.expand.database.persistence.method.AbstractLazyOperationMethod",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_3806 { 
   	label=wu
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1512450322 { 
   	label=framework
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   AbstractBasicComparison969335457[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   sqlPart: SqlPart [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ apply(condition: boolean, applySql: String, values: Object...): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ as(clazz: Class&lt;?&gt;): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ as(row: R, asName: String): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ as(row: Snippet&lt;T1, ?&gt;, asRowName: Snippet&lt;T2, ?&gt;): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ as(comparison: BasicComparison&lt;T1, ?, ?, ?&gt;, asRowName: Snippet&lt;T3, ?&gt;): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ as(comparison: BasicComparison&lt;T1, ?, ?, ?&gt;, asRowName: String): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ between(condition: boolean, row: R, leftVar: Object, rightVar: Object): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ betweenO(condition: boolean, row: R, leftVar: Object, rightVar: Object): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># columnToString(row: R): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ eq(condition: boolean, row: R, v: V): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ eqo(condition: boolean, row: R, var: Object): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ functionAs(function: String, asName: String): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ functionAs(function: String, asRowName: Snippet&lt;T2, ?&gt;): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ groupBy(rows: R...): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ gt(condition: boolean, row: R, var: V): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ gto(condition: boolean, row: R, var: Object): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ having(havingBasicComparison: AbstractJoinBasicComparison&lt;T, T2, Snippet&lt;T, ?&gt;, Snippet&lt;T2, ?&gt;&gt;): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ ignoreAs(row: Snippet&lt;T1, ?&gt;): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ in(condition: boolean, row: R, var: V): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ ino(condition: boolean, row: R, var: Object): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ internalJoin(internalJoinBasicComparison: AbstractJoinBasicComparison&lt;T, T2, Snippet&lt;T, ?&gt;, Snippet&lt;T2, ?&gt;&gt;): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ isNull(row: R): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ lastSql(lastSql: String): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ leftJoin(leftJoinBasicComparison: AbstractJoinBasicComparison&lt;T, T2, Snippet&lt;T, ?&gt;, Snippet&lt;T2, ?&gt;&gt;): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ like(condition: boolean, row: R, var: V): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ likeO(condition: boolean, row: R, var: Object): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ limit(limit: long): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ limit(skipped: long, limit: long): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ lt(condition: boolean, row: R, var: V): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ lto(condition: boolean, row: R, var: Object): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ ne(condition: boolean, row: R, v: V): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ neo(condition: boolean, row: R, var: Object): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notIn(condition: boolean, row: R, var: V): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notIno(condition: boolean, row: R, var: Object): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notLike(condition: boolean, row: R, var: V): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notLikeO(condition: boolean, row: R, var: Object): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notNull(row: R): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ oas(row: String, asName: String): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ oas(row: String, asRowName: Snippet&lt;T2, ?&gt;): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ onlyUseAs(): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ or(orAbstractJoinBasicComparison: BasicComparison): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ or(condition: boolean, row: R, v: V): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ orderBy(order: String, rows: R...): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ rightJoin(rightJoinBasicComparison: AbstractJoinBasicComparison&lt;T, T2, Snippet&lt;T, ?&gt;, Snippet&lt;T2, ?&gt;&gt;): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># valueToString(v: V): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ where(whereAbstractJoinBasicComparison: AbstractJoinBasicComparison&lt;T, T2, Snippet&lt;T, ?&gt;, Snippet&lt;T2, ?&gt;&gt;): AbstractBasicComparison&lt;T, R, V&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractBuild1911961778[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractBuild&lt;T&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   DELETE_FROM: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   SELECT_ALL: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ count(comparison: BasicComparison): Long</TD></TR>
<TR><TD ALIGN="LEFT" ># createExecute(persistenceRepository: PersistenceRepository): Execute&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># createExecute(): LambdaExecute&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># createExecute(rResult: Collection&lt;?&gt;): Execute&lt;R&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(comparison: BasicComparison): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ exists(comparison: BasicComparison): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># getClassT(basicComparison: BasicComparison&lt;T, ?, ?, ?&gt;): Class&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ select(comparison: BasicComparison, snippets: Snippet&lt;T, ?&gt;...): Execute&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ select(comparison: BasicComparison): Execute&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ select(sql: String, returnType: Class&lt;T&gt;): Execute&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ select(comparison: BasicComparison&lt;T, ?, ?, ?&gt;, abstractInternalLinkBasicComparisons: AbstractInternalLinkBasicComparison&lt;R, ?, ?, ?, ?&gt;...): Execute&lt;R&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(t: T, comparison: BasicComparison): Integer</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractDynamicEasyUpsert998367306[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractDynamicEasyUpsert</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ determineIEasyUpsert(): IEasyUpsert</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractExecute1893722297[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractExecute&lt;T&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyOperation: LazyBaseOperation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ collectOne(aClass: Class&lt;R&gt;): R</TD></TR>
<TR><TD ALIGN="LEFT" >+ collectOne(): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ collection(aClass: Class&lt;R&gt;): List&lt;R&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ collection(): List&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ page(lazyPage: LazyPage&lt;R&gt;): LazyPage&lt;R&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ page(lazyPage: LazyPage&lt;R&gt;, rClass: Class&lt;R&gt;): LazyPage&lt;R&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># persistenceRepository(): PersistenceRepository</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractInternalLinkBasicComparison777403285[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   sqlPart: SqlPart [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ apply(condition: boolean, applySql: String, values: Object...): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ between(condition: boolean, row: R1, leftVar: Object, rightVar: Object): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ betweenO(condition: boolean, row: R1, leftVar: Object, rightVar: Object): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># columnNameMasterToString(row: R2): String</TD></TR>
<TR><TD ALIGN="LEFT" ># columnNameSourceToString(row: R1): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ eq(condition: boolean, row: R1, var: R2): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ eqo(condition: boolean, row: R1, var: Object): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># fieldNameMasterToString(row: R2): String</TD></TR>
<TR><TD ALIGN="LEFT" ># fieldNameSourceToString(row: R1): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ groupBy(rows: R1...): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ gt(condition: boolean, row: R1, var: R2): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ gto(condition: boolean, row: R1, var: Object): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ in(condition: boolean, row: R1, var: R2): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ ino(condition: boolean, row: R1, var: Object): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ isNull(row: R1): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ lastSql(lastSql: String): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ like(condition: boolean, row: R1, var: R2): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ likeO(condition: boolean, row: R1, var: Object): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ limit(limit: long): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ limit(skipped: long, limit: long): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ lt(condition: boolean, row: R1, var: R2): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ lto(condition: boolean, row: R1, var: Object): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ ne(condition: boolean, row: R1, var: R2): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ neo(condition: boolean, row: R1, var: Object): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notIn(condition: boolean, row: R1, var: R2): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notIno(condition: boolean, row: R1, var: Object): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notLike(condition: boolean, row: R1, var: R2): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notLikeO(condition: boolean, row: R1, var: Object): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notNull(row: R1): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ or(condition: boolean, row: R1, var: R2): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ orderBy(order: String, rows: R1...): AbstractInternalLinkBasicComparison&lt;R, Source, Master, R1, R2&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractInternalLinkSelectLazyLambdaStream1400174407[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractInternalLinkSelectLazyLambdaStream</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ selectList(comparison: BasicComparison&lt;T, ?, ?, ?&gt;, abstractInternalLinkBasicComparisons: AbstractInternalLinkBasicComparison&lt;R, ?, ?, ?, ?&gt;...): Collection&lt;R&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectList(comparison: BasicComparison&lt;T, ?, ?, ?&gt;, rClazz: Class&lt;R&gt;, abstractInternalLinkBasicComparisons: AbstractInternalLinkBasicComparison&lt;R, ?, ?, ?, ?&gt;...): Collection&lt;R&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectOne(comparison: BasicComparison&lt;T, ?, ?, ?&gt;, abstractInternalLinkBasicComparisons: AbstractInternalLinkBasicComparison&lt;R, ?, ?, ?, ?&gt;...): R</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectOne(comparison: BasicComparison&lt;T, ?, ?, ?&gt;, rClazz: Class&lt;R&gt;, abstractInternalLinkBasicComparisons: AbstractInternalLinkBasicComparison&lt;R, ?, ?, ?, ?&gt;...): R</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectPage(comparison: BasicComparison&lt;T, ?, ?, ?&gt;, lazyPage: LazyPage&lt;R&gt;, abstractInternalLinkBasicComparisons: AbstractInternalLinkBasicComparison&lt;R, ?, ?, ?, ?&gt;...): LazyPage&lt;R&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectPage(comparison: BasicComparison&lt;T, ?, ?, ?&gt;, lazyPage: LazyPage, rClazz: Class&lt;R&gt;, abstractInternalLinkBasicComparisons: AbstractInternalLinkBasicComparison&lt;R, ?, ?, ?, ?&gt;...): LazyPage&lt;R&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractJavaReverseEngineering723278788[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractJavaReverseEngineering</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractJavaReverseEngineeringAnnotation723278788[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractJavaReverseEngineeringAnnotation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   classAnnotationParts: List&lt;String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addClassAnnotationPart(classAnnotationPart: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractJavaReverseEngineeringClassName723278788[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractJavaReverseEngineeringClassName</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   classNameParts: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   fileName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addClassNamePart(classNamePart: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractJavaReverseEngineeringField723278788[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractJavaReverseEngineeringField</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   classFieldParts: List&lt;String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addClassFieldPart(classFieldPart: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractJavaReverseEngineeringImport723278788[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractJavaReverseEngineeringImport</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   importClassNames: List&lt;String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addImportClassName(importClassName: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractJavaReverseEngineeringMethod723278788[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractJavaReverseEngineeringMethod</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   classMethodPartList: List&lt;String&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addClassMethodPart(classMethodPart: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassMethodPart()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractJoinBasicComparison969335457[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   sqlPart: SqlPart [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ apply(condition: boolean, applySql: String, values: Object...): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ between(condition: boolean, row: R1, leftVar: Object, rightVar: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ betweenO(condition: boolean, row: R1, leftVar: Object, rightVar: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># column1ToString(row: R1): String</TD></TR>
<TR><TD ALIGN="LEFT" ># column2ToString(row: R2): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ eq(condition: boolean, row: R1, var: R2): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ eqRighto(row: R2, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ eqRighto(condition: boolean, row: R2, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ eqo(condition: boolean, row: R1, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ groupBy(rows: R1...): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ gt(condition: boolean, row: R1, var: R2): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ gtRighto(condition: boolean, row: R2, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ gtRighto(row: R2, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ gto(condition: boolean, row: R1, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ in(condition: boolean, row: R1, var: R2): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ ino(condition: boolean, row: R1, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ isNull(row: R1): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ lastSql(lastSql: String): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ like(condition: boolean, row: R1, var: R2): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ likeO(condition: boolean, row: R1, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ likeRightO(condition: boolean, row: R2, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ likeRightO(row: R2, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ limit(limit: long): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ limit(skipped: long, limit: long): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ lt(condition: boolean, row: R1, var: R2): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ ltRighto(condition: boolean, row: R2, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ ltRighto(row: R2, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ lto(condition: boolean, row: R1, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ ne(condition: boolean, row: R1, var: R2): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ neRighto(row: R2, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ neRighto(condition: boolean, row: R2, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ neo(condition: boolean, row: R1, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notIn(condition: boolean, row: R1, var: R2): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notIno(condition: boolean, row: R1, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notLike(condition: boolean, row: R1, var: R2): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notLikeO(condition: boolean, row: R1, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notLikeRightO(condition: boolean, row: R2, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notLikeRightO(row: R2, var: Object): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notNull(row: R1): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notNullRight(row: R2): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ or(condition: boolean, row: R1, var: R2): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ orderBy(order: String, rows: R1...): AbstractJoinBasicComparison&lt;T1, T2, R1, R2&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractLazyCrudProvider1054800114[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractLazyCrudProvider&lt;T, ID&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   type: Class&lt;T&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchDeleteById(ids: List&lt;ID&gt;): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ count(): Result&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteById(id: ID): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ existsById(id: ID): Result&lt;Boolean&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findAll(comparison: LambdaBasicComparison&lt;T&gt;): Result&lt;List&lt;T&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findById(id: ID): Result&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(comparison: LambdaBasicComparison&lt;T&gt;): Result&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ retrieveAll(t: T): Result&lt;List&lt;T&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ retrievePage(size: int, current: int, t: T): Result&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(s: S): Result&lt;S&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(s: S): Result&lt;S&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ upsert(s: Collection&lt;S&gt;): Result&lt;S&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractLazyCrudRepository1054800114[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractLazyCrudRepository&lt;T, ID&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   type: Class&lt;T&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ count(): Result&lt;Long&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteById(id: ID): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ existsById(id: ID): Result&lt;Boolean&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findById(id: ID): Result&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(s: S): Result&lt;S&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(s: S): Result&lt;S&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ upsert(s: Collection&lt;S&gt;): Result&lt;S&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractLazyDDLOperationMethod1506107375[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractLazyDDLOperationMethod</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractLazyDQLOperationMethod1506106972[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractLazyDQLOperationMethod</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractLazyOperationMethod1753658515[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractLazyOperationMethod</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   log: Logger [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ accurateExecution(connection: Connection, param: Object): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ executionFunction(connection: Connection, methodParamFunction: MethodParamFunction&lt;PreparedStatement&gt;, param: Object): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ isWrapClass(clazz: Class&lt;?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadSqlParameters(sqlFormat: String, params: Object...): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ perfect(connection: Connection, easyHashMap: EasyHashMap): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ perfect(connection: Connection, entityClass: Class): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ perfect(connection: Connection, entityClass: Class, ddlAuto: DDLAuto): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ perfect(connection: Connection, lazyTableEndpoint: LazyTableEndpoint, ddlAuto: DDLAuto): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ perfect(connection: Connection, lazyTableEndpoint: LazyTableEndpoint): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ resultSetConverter(resultSet: ResultSet, resultType: String): List&lt;E&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ resultSetConverter(resultSet: ResultSet, domainClass: Class&lt;E&gt;): List&lt;E&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractLazyOperationProxyRetryInvocationHandler1325750148[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractLazyOperationProxyRetryInvocationHandler</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ afterInvoke()</TD></TR>
<TR><TD ALIGN="LEFT" >+ afterRetryInvoke(hasRetry: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ determineConnection(): DataSource</TD></TR>
<TR><TD ALIGN="LEFT" >+ invoke(proxy: Object, method: Method, args: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ switchSchema(connection: Connection): Connection</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractLazyTableEndpoint730853652[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractLazyTableEndpoint</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   className: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   clazz: Class [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   comment: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dataDrillDown: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   engine: Engine [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   exist: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   fieldEndpoints: List&lt;LazyTableFieldEndpoint&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnumList: Map&lt;String, Map&lt;String, String&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   packageName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   perfectTable: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   schema: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   smartFillField: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tableName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># alterTableColumnSQLPartList(currentColumnNameList: List&lt;LazyTableFieldEndpoint&gt;, dropColumn: boolean): List&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" ># getLayerFieldTypeMap(javaFieldLazyTableFieldEndpointList: List&lt;LazyTableFieldEndpoint&gt;): Map&lt;LayerFieldType, Map&lt;String, List&lt;LazyTableFieldEndpoint&gt;&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ specifiedFieldAnnotation(fieldType: LayerFieldType): List&lt;LazyTableFieldEndpoint&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractLazyTableFieldEndpoint728169074[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractLazyTableFieldEndpoint</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   alias: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   clazz: Class [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   columnName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   columnType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   comment: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   convert: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   convertContentSeparator: String[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dataType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   defaultValue: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   exist: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   extra: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   field: Field [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   fieldDefaultValue: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   fieldValue: Object [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEnum: Class&lt;? extends IEnum&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   idType: IdType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   key: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyTableIndexEndpoints: LazyTableIndexEndpoint[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   notNull: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   optional: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   parameters: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   privileges: Privilege[] [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   scale: long [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   serialNumber: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   upsertStrategy: LazyFieldStrategy [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   version: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ clone(): LazyTableFieldEndpoint</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractLazyTableIndexEndpoint725250714[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractLazyTableIndexEndpoint</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   fieldIndexType: LayerFieldType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   indexName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractProxyRetryInvocationHandler300698906[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractProxyRetryInvocationHandler</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   log: Logger [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ afterRetryInvoke(hasRetry: boolean)</TD></TR>
<TR><TD ALIGN="LEFT" >+ retryInvoke(proxy: Object, method: Method, args: Object[], retryTime: int, throwable: Throwable, hasRetry: boolean): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractSelectBasicComparison777403285[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractSelectBasicComparison&lt;T, R, V&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractSelectLazyLambdaStream1400174407[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractSelectLazyLambdaStream</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractSimpleDeleteLazyLambdaStream970737654[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractSimpleDeleteLazyLambdaStream</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractSimpleSelectBuild1911961778[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractSimpleSelectBuild&lt;T&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ selectList(comparison: BasicComparison): Collection&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectList(comparison: BasicComparison, rClazz: Class&lt;R&gt;): Collection&lt;R&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectOne(comparison: BasicComparison): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectOne(comparison: BasicComparison, rClazz: Class&lt;R&gt;): R</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectPage(comparison: BasicComparison, lazyPage: LazyPage&lt;T&gt;): LazyPage&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectPage(comparison: BasicComparison, lazyPage: LazyPage, rClazz: Class&lt;R&gt;): LazyPage&lt;R&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractSimpleSelectLazyLambdaStream1400174407[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractSimpleSelectLazyLambdaStream</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ selectList(comparison: BasicComparison&lt;T, ?, ?, ?&gt;): List&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectList(comparison: BasicComparison&lt;T, ?, ?, ?&gt;, rClazz: Class&lt;R&gt;): List&lt;R&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectOne(comparison: BasicComparison&lt;T, ?, ?, ?&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectOne(comparison: BasicComparison&lt;T, ?, ?, ?&gt;, rClazz: Class&lt;R&gt;): R</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectPage(comparison: BasicComparison&lt;T, ?, ?, ?&gt;, lazyPage: LazyPage&lt;T&gt;): LazyPage&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectPage(comparison: BasicComparison&lt;T, ?, ?, ?&gt;, lazyPage: LazyPage, rClazz: Class&lt;R&gt;): LazyPage&lt;R&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectPage(lazyPage: LazyPage, returnType: Class&lt;T&gt;, sql: String, params: Object...): LazyPage&lt;T&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AbstractSimpleUpdateLazyLambdaStream1467349780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AbstractSimpleUpdateLazyLambdaStream</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcwCodeRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcwCodeRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(acwCodeList: List&lt;AcwCode&gt;): Result&lt;AcwCode&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(acwCode: AcwCode): Result&lt;List&lt;AcwCode&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(acwCode: AcwCode): Result&lt;AcwCode&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, acwCode: AcwCode): Result&lt;LazyPage&lt;AcwCode&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(acwCode: AcwCode): Result&lt;AcwCode&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(acwCode: AcwCode): Result&lt;AcwCode&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AcwLineCodeRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AcwLineCodeRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(acwLineCodeList: List&lt;AcwLineCode&gt;): Result&lt;AcwLineCode&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(acwLineCode: AcwLineCode): Result&lt;List&lt;AcwLineCode&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(acwLineCode: AcwLineCode): Result&lt;AcwLineCode&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, acwLineCode: AcwLineCode): Result&lt;LazyPage&lt;AcwLineCode&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(acwLineCode: AcwLineCode): Result&lt;AcwLineCode&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(acwLineCode: AcwLineCode): Result&lt;AcwLineCode&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AnalyzeField653387000[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AnalyzeField</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   clazz: Class [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   comment: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   convertedFieldName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   exist: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   fieldIndexType: LayerFieldType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   fieldName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ builder(): AnalyzeFieldBuilder</TD></TR>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ setClazz(clazz: Class): AnalyzeField</TD></TR>
<TR><TD ALIGN="LEFT" >+ setComment(comment: String): AnalyzeField</TD></TR>
<TR><TD ALIGN="LEFT" >+ setConvertedFieldName(convertedFieldName: String): AnalyzeField</TD></TR>
<TR><TD ALIGN="LEFT" >+ setExist(exist: boolean): AnalyzeField</TD></TR>
<TR><TD ALIGN="LEFT" >+ setFieldIndexType(fieldIndexType: LayerFieldType): AnalyzeField</TD></TR>
<TR><TD ALIGN="LEFT" >+ setFieldName(fieldName: String): AnalyzeField</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AnalyzeParameter653387000[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AnalyzeParameter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   clazz: Class [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   method: Method [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ create(): AnalyzeParameter</TD></TR>
<TR><TD ALIGN="LEFT" >+ setClazz(clazz: Class): AnalyzeParameter</TD></TR>
<TR><TD ALIGN="LEFT" >+ setMethod(method: Method): AnalyzeParameter</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

AnnotationCodeRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)AnnotationCodeRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(annotationCodeList: List&lt;AnnotationCode&gt;): Result&lt;AnnotationCode&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(annotationCode: AnnotationCode): Result&lt;List&lt;AnnotationCode&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(annotationCode: AnnotationCode): Result&lt;AnnotationCode&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, annotationCode: AnnotationCode): Result&lt;LazyPage&lt;AnnotationCode&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(annotationCode: AnnotationCode): Result&lt;AnnotationCode&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(annotationCode: AnnotationCode): Result&lt;AnnotationCode&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ApplicationApiDownLinkMethodRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ApplicationApiDownLinkMethodRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(applicationApiDownLinkMethodList: List&lt;ApplicationApiDownLinkMethod&gt;): Result&lt;ApplicationApiDownLinkMethod&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(applicationApiDownLinkMethod: ApplicationApiDownLinkMethod): Result&lt;List&lt;ApplicationApiDownLinkMethod&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(applicationApiDownLinkMethod: ApplicationApiDownLinkMethod): Result&lt;ApplicationApiDownLinkMethod&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, applicationApiDownLinkMethod: ApplicationApiDownLinkMethod): Result&lt;LazyPage&lt;ApplicationApiDownLinkMethod&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(applicationApiDownLinkMethod: ApplicationApiDownLinkMethod): Result&lt;ApplicationApiDownLinkMethod&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(applicationApiDownLinkMethod: ApplicationApiDownLinkMethod): Result&lt;ApplicationApiDownLinkMethod&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ApplicationApiParamRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ApplicationApiParamRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(applicationApiParamList: List&lt;ApplicationApiParam&gt;): Result&lt;ApplicationApiParam&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(applicationApiParam: ApplicationApiParam): Result&lt;List&lt;ApplicationApiParam&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(applicationApiParam: ApplicationApiParam): Result&lt;ApplicationApiParam&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, applicationApiParam: ApplicationApiParam): Result&lt;LazyPage&lt;ApplicationApiParam&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(applicationApiParam: ApplicationApiParam): Result&lt;ApplicationApiParam&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(applicationApiParam: ApplicationApiParam): Result&lt;ApplicationApiParam&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ApplicationApiRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ApplicationApiRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(applicationApiList: List&lt;ApplicationApi&gt;): Result&lt;ApplicationApi&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(applicationApi: ApplicationApi): Result&lt;List&lt;ApplicationApi&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(applicationApi: ApplicationApi): Result&lt;ApplicationApi&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, applicationApi: ApplicationApi): Result&lt;LazyPage&lt;ApplicationApi&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(applicationApi: ApplicationApi): Result&lt;ApplicationApi&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(applicationApi: ApplicationApi): Result&lt;ApplicationApi&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ApplicationApiTableRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ApplicationApiTableRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(applicationApiTableList: List&lt;ApplicationApiTable&gt;): Result&lt;ApplicationApiTable&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(applicationApiTable: ApplicationApiTable): Result&lt;List&lt;ApplicationApiTable&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(applicationApiTable: ApplicationApiTable): Result&lt;ApplicationApiTable&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, applicationApiTable: ApplicationApiTable): Result&lt;LazyPage&lt;ApplicationApiTable&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(applicationApiTable: ApplicationApiTable): Result&lt;ApplicationApiTable&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(applicationApiTable: ApplicationApiTable): Result&lt;ApplicationApiTable&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ApplicationRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ApplicationRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(applicationList: List&lt;Application&gt;): Result&lt;Application&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(application: Application): Result&lt;List&lt;Application&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(application: Application): Result&lt;Application&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, application: Application): Result&lt;LazyPage&lt;Application&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(application: Application): Result&lt;Application&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(application: Application): Result&lt;Application&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

BinHexSwitchUtil112403562[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)BinHexSwitchUtil</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ bytesToHexSql(bytes: byte[]): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ bytesToHexString(bytes: byte[]): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ hexStringToBytes(hexString: String): byte[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ readBytes(in: InputStream): byte[]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CamelAndUnderLineConverter1920362630[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CamelAndUnderLineConverter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ capitalizeFirstLetter(name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ humpTo2(hump: String, character: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ humpToArray(hump: String): List&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ humpToLine(hump: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ humpToLine2(hump: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ humpToMidLine2(hump: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ isField(name: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isGetter(name: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isSetter(name: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ isUppercase(name: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ lineToHump(str: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ lineToHumpClass(str: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ lineToHumpField(str: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ lowercaseFirstLetter(name: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ methodToField(name: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassLazyTableEndpoint730853652[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassLazyTableEndpoint</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   log: Logger [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ alterTableColumnSQL(currentColumnNameList: List&lt;LazyTableFieldEndpoint&gt;, dropColumn: boolean): List&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ alterTableSQL(currentColumnNameList: List&lt;LazyTableFieldEndpoint&gt;, dropColumn: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ creatTableSQL(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ specifiedFieldAnnotation(fieldType: LayerFieldType): List&lt;LazyTableFieldEndpoint&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(class_List: List&lt;Class&gt;): Result&lt;Class&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(class_: Class): Result&lt;List&lt;Class&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(class_: Class): Result&lt;Class&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, class_: Class): Result&lt;LazyPage&lt;Class&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(class_: Class): Result&lt;Class&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(class_: Class): Result&lt;Class&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Condition53766133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Condition</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   andOr: AndOr [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   fieldName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   fieldValueName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   rowName: Object [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   rowValue: Object [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   rowValueType: RowValueType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   type: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ copy(): Condition</TD></TR>
<TR><TD ALIGN="LEFT" >+ setAndOr(andOr: AndOr): Condition</TD></TR>
<TR><TD ALIGN="LEFT" >+ setFieldName(fieldName: String): Condition</TD></TR>
<TR><TD ALIGN="LEFT" >+ setFieldValueName(fieldValueName: String): Condition</TD></TR>
<TR><TD ALIGN="LEFT" >+ setRowName(rowName: Object): Condition</TD></TR>
<TR><TD ALIGN="LEFT" >+ setRowValue(rowValue: Object): Condition</TD></TR>
<TR><TD ALIGN="LEFT" >+ setRowValueType(rowValueType: RowValueType): Condition</TD></TR>
<TR><TD ALIGN="LEFT" >+ setType(type: String): Condition</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ConverterClass2KafkaSchema53368139[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ConverterClass2KafkaSchema</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ converterClass2TargetJsonSchema(clazz: Class, forcedDuplicateNameSwitch: boolean): TargetJsonSchema</TD></TR>
<TR><TD ALIGN="LEFT" >- databaseFieldConversionSchemaType(type: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getKafkaSchemaName(clazz: Class, deduplicationSwitch: boolean): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CreateField1588919010[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CreateField</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   fieldName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   fieldTypeName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ setFieldName(fieldName: String): CreateField</TD></TR>
<TR><TD ALIGN="LEFT" >+ setFieldTypeName(fieldTypeName: String): CreateField</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

CreateInfo1588919010[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)CreateInfo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   aPackage: Package [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   classAnnotationList: List&lt;Annotation&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   className: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   createFieldList: List&lt;CreateField&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   fileSuffix: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   innerClassList: List&lt;CreateInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   override: Boolean [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ setAPackage(aPackage: Package): CreateInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ setClassAnnotationList(classAnnotationList: List&lt;Annotation&gt;): CreateInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ setClassName(className: String): CreateInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ setCreateFieldList(createFieldList: List&lt;CreateField&gt;): CreateInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ setFileSuffix(fileSuffix: String): CreateInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ setInnerClassList(innerClassList: List&lt;CreateInfo&gt;): CreateInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ setOverride(override: Boolean): CreateInfo</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DataBaseAddressRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DataBaseAddressRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(dataBaseAddressList: List&lt;DataBaseAddress&gt;): Result&lt;DataBaseAddress&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(dataBaseAddress: DataBaseAddress): Result&lt;List&lt;DataBaseAddress&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(dataBaseAddress: DataBaseAddress): Result&lt;DataBaseAddress&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, dataBaseAddress: DataBaseAddress): Result&lt;LazyPage&lt;DataBaseAddress&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(dataBaseAddress: DataBaseAddress): Result&lt;DataBaseAddress&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(dataBaseAddress: DataBaseAddress): Result&lt;DataBaseAddress&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DatabaseTableColumnRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatabaseTableColumnRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(databaseTableColumnList: List&lt;DatabaseTableColumn&gt;): Result&lt;DatabaseTableColumn&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(databaseTableColumn: DatabaseTableColumn): Result&lt;List&lt;DatabaseTableColumn&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(databaseTableColumn: DatabaseTableColumn): Result&lt;DatabaseTableColumn&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, databaseTableColumn: DatabaseTableColumn): Result&lt;LazyPage&lt;DatabaseTableColumn&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(databaseTableColumn: DatabaseTableColumn): Result&lt;DatabaseTableColumn&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(databaseTableColumn: DatabaseTableColumn): Result&lt;DatabaseTableColumn&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DatabaseTableRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatabaseTableRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(databaseTableList: List&lt;DatabaseTable&gt;): Result&lt;DatabaseTable&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(databaseTable: DatabaseTable): Result&lt;List&lt;DatabaseTable&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(databaseTable: DatabaseTable): Result&lt;DatabaseTable&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, databaseTable: DatabaseTable): Result&lt;LazyPage&lt;DatabaseTable&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(databaseTable: DatabaseTable): Result&lt;DatabaseTable&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(databaseTable: DatabaseTable): Result&lt;DatabaseTable&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultAbstractJavaReverseEngineeringMethod9775966[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultAbstractJavaReverseEngineeringMethod</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   reverseEngineering: ReverseEngineering [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tableEndpoint: ClassLazyTableEndpoint [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createJavaContextCode(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ createJavaFile(resourceFilePrefix: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ lowercaseFirstLetterTableName(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultClassSchema111879186[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultClassSchema</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   clazz: Class [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ classAnnotation(annotationType: Class&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ clazz(): Class</TD></TR>
<TR><TD ALIGN="LEFT" >+ fieldSchema(): List&lt;FieldSchema&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyApplication290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyApplication</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassMethodPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyApplicationImpl290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyApplicationImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassMethodPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyAssembler290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyAssembler</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassMethodPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyCommand290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyCommand</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyController290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassMethodPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyDTO290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyDTO</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyDomain290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyDomain</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyDomainRepository290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyDomainRepository</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassMethodPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyEntity290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyEntity</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyFactory290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyFactory</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyApplication(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyApplicationCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyApplicationImpl(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyApplicationImplCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyAssembler(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyAssemblerCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyCommand(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyCommandCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyController(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyControllerCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyDomain(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyDomainCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyDomainRepository(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyDomainRepositoryCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyInfrastructureConverter(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyInfrastructureConverterCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyInfrastructureEntity(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyInfrastructureEntityCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyInfrastructureMapper(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyInfrastructureMapperCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyInfrastructureMapperXml(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyInfrastructureMapperXmlCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyInfrastructurePersistence(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDDDLazyInfrastructurePersistenceCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultDDDLazyDTO(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultDDDLazyDTOCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultDDDLazyEntity(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultDDDLazyEntityCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultDDDLazyMapper(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultDDDLazyMapperCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultDDDLazyMapperXml(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultDDDLazyMapperXmlCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultDDDLazyService(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultDDDLazyServiceCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultDDDLazyServiceImpl(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultDDDLazyServiceImplCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyInfrastructureConverter290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyInfrastructureConverter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassMethodPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyInfrastructureEntity290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyInfrastructureEntity</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyInfrastructureMapper290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyInfrastructureMapper</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyInfrastructureMapperXml290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyInfrastructureMapperXml</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createJavaContextCode(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateClassDescribe(comment: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyInfrastructurePersistence290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyInfrastructurePersistence</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassMethodPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyMapper290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyMapper</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyMapperXml290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyMapperXml</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createJavaContextCode(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateClassDescribe(comment: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyService290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultDDDLazyServiceImpl290109780[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultDDDLazyServiceImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultFeignLazyAo375490719[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultFeignLazyAo</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultFeignLazyApi375490719[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultFeignLazyApi</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultFeignLazyApiRpc375490719[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultFeignLazyApiRpc</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultFeignLazyFactory375490719[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultFeignLazyFactory</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ defaultDefaultFeignLazyAo(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultFeignLazyAoCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultFeignLazyApi(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultFeignLazyApiCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultFeignLazyApiRpc(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultFeignLazyApiRpcCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultFieldSchema111879186[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultFieldSchema</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   field: Field [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ field(): Field</TD></TR>
<TR><TD ALIGN="LEFT" >+ fieldAnnotation(annotationType: Class&lt;T&gt;): T</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultLazyOperationMethod1753658515[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultLazyOperationMethod</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultMVCLazyController290118986[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultMVCLazyController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultMVCLazyEntity290118986[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultMVCLazyEntity</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultMVCLazyFactory290118986[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultMVCLazyFactory</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ defaultDefaultMVCLazyEntity(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultMVCLazyEntityCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultMVCLazyMapper(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultMVCLazyMapperCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultMVCLazyMapperXml(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultMVCLazyMapperXmlCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultMVCLazyService(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultMVCLazyServiceCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultMVCLazyServiceImpl(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultDefaultMVCLazyServiceImplCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultMVCLazyController(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): JavaReverseEngineering</TD></TR>
<TR><TD ALIGN="LEFT" >+ defaultMVCLazyControllerCreateJavaFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultMVCLazyMapper290118986[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultMVCLazyMapper</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultMVCLazyMapperXml290118986[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultMVCLazyMapperXml</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createJavaContextCode(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateClassDescribe(comment: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultMVCLazyService290118986[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultMVCLazyService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultMVCLazyServiceImpl290118986[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultMVCLazyServiceImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ initClassAnnotationPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassFieldPart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initClassNamePart()</TD></TR>
<TR><TD ALIGN="LEFT" >+ initImportClassName()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultSqlCureSessionInterceptor238112549[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultSqlCureSessionInterceptor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   cureAdapter: CureAdapter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   defaultSqlSession: SqlSession [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ determineConnection(): DataSource</TD></TR>
<TR><TD ALIGN="LEFT" >+ retryInvoke(proxy: Object, method: Method, args: Object[], retryTime: int, throwable: Throwable, hasRetry: boolean): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultTableAdapter1961326352[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultTableAdapter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   TABLE_ID_MAP: Map&lt;Long, TableInfo&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   map: Map&lt;String, TableInfo&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ cacheTable(tableId: long, schema: String, tableName: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ existsTableId(tableId: long): Boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTable(tableId: long): TableInfo</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultUserConvertService111879186[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultUserConvertService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ afterPropertiesSet()</TD></TR>
<TR><TD ALIGN="LEFT" >+ userConvert(aClass: Class&lt;?&gt;): Map&lt;String, Map&lt;String, String&gt;&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DefaultUserDetailsService1517514367[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DefaultUserDetailsService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   passwordEncoder: PasswordEncoder [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createUser(loginUserBO: LoginUserBO)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadUserById(userId: String): UserDetails</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadUserByUsername(userName: String): UserDetails</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DependencyRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DependencyRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(dependencyList: List&lt;Dependency&gt;): Result&lt;Dependency&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(dependency: Dependency): Result&lt;List&lt;Dependency&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(dependency: Dependency): Result&lt;Dependency&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, dependency: Dependency): Result&lt;LazyPage&lt;Dependency&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(dependency: Dependency): Result&lt;Dependency&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(dependency: Dependency): Result&lt;Dependency&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DictionaryDataRepositoryImpl1237355193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DictionaryDataRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ delete(dictionaryData: DictionaryData): Result&lt;DictionaryData&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(dictionaryData: DictionaryData): Result&lt;List&lt;DictionaryData&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(dictionaryData: DictionaryData): Result&lt;DictionaryData&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(dictionaryData: DictionaryData): Result&lt;DictionaryData&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DictionaryRepositoryImpl1237355193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DictionaryRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ delete(dictionary: Dictionary): Result&lt;Dictionary&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(dictionary: Dictionary): Result&lt;List&lt;Dictionary&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(dictionary: Dictionary): Result&lt;Dictionary&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(dictionary: Dictionary): Result&lt;Dictionary&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DocPdfMergeRepositoryImpl1070865722[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DocPdfMergeRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(docPdfMergeList: List&lt;DocPdfMerge&gt;): Result&lt;DocPdfMerge&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(docPdfMerge: DocPdfMerge): Result&lt;List&lt;DocPdfMerge&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(docPdfMerge: DocPdfMerge): Result&lt;DocPdfMerge&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, docPdfMerge: DocPdfMerge): Result&lt;LazyPage&lt;DocPdfMerge&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(docPdfMerge: DocPdfMerge): Result&lt;DocPdfMerge&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(docPdfMerge: DocPdfMerge): Result&lt;DocPdfMerge&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DwaFinDimRegionarea2RepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DwaFinDimRegionarea2RepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(dwaFinDimRegionarea2List: List&lt;DwaFinDimRegionarea2&gt;): Result&lt;DwaFinDimRegionarea2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(dwaFinDimRegionarea2: DwaFinDimRegionarea2): Result&lt;List&lt;DwaFinDimRegionarea2&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(dwaFinDimRegionarea2: DwaFinDimRegionarea2): Result&lt;DwaFinDimRegionarea2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, dwaFinDimRegionarea2: DwaFinDimRegionarea2): Result&lt;LazyPage&lt;DwaFinDimRegionarea2&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(dwaFinDimRegionarea2: DwaFinDimRegionarea2): Result&lt;DwaFinDimRegionarea2&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(dwaFinDimRegionarea2: DwaFinDimRegionarea2): Result&lt;DwaFinDimRegionarea2&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DynamicEasyUpsert998367306[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DynamicEasyUpsert</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   applicationContext: ApplicationContext [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEasyUpsertList: List&lt;IEasyUpsert&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iEasyUpsertMap: ConcurrentMap&lt;EasyUpsertType, IEasyUpsert&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   primary: EasyUpsertType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   primaryEasyUpsert: EasyUpsert [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   springUpsertAutoConfigure: SpringUpsertAutoConfigure [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ afterPropertiesSet()</TD></TR>
<TR><TD ALIGN="LEFT" >- defaultEasyUpsert(): EasyUpsert</TD></TR>
<TR><TD ALIGN="LEFT" >+ determineIEasyUpsert(): IEasyUpsert</TD></TR>
<TR><TD ALIGN="LEFT" >- determinePrimaryDataSource(): IEasyUpsert</TD></TR>
<TR><TD ALIGN="LEFT" >- getIEasyUpsert(peek: EasyUpsert): IEasyUpsert</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DynamicLazyDSAdapter504710133[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DynamicLazyDSAdapter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   dataSourceMap: Map&lt;String, DataSource&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   primary: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ determineDataSource(): DataSource</TD></TR>
<TR><TD ALIGN="LEFT" >+ mybatisDataSource(key: String, dataSource: DataSource)</TD></TR>
<TR><TD ALIGN="LEFT" >+ onApplicationEvent(event: ContextRefreshedEvent)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DynamicLazyDSContextHolder1847737669[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DynamicLazyDSContextHolder</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ clear()</TD></TR>
<TR><TD ALIGN="LEFT" >+ peek(): LazyDS</TD></TR>
<TR><TD ALIGN="LEFT" >+ poll()</TD></TR>
<TR><TD ALIGN="LEFT" >+ push(ds: LazyDS)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EasyAnnotationConverter1240898002[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EasyAnnotationConverter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ annotationConvertConversion(field: Field, fieldVal: Object, iEnumList: Map&lt;String, Map&lt;String, String&gt;&gt;): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ collectionConvert(clazz: Class): Map&lt;String, Map&lt;String, String&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getComment(clazz: Class): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCustomTableValue(clazz: Class): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getCustomUniquePK(clazz: Class): List&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTableName(clazz: Class): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EasyHashMap1993642178[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EasyHashMap&lt;K, V&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   ValueType: HashMap&lt;K, Class&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   humpToUnderline: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   isCapitalized: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   keyAdjust: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   modifyUniqueLabel: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   uniqueFieldList: List&lt;Object&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   uniqueLabel: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ beforeObjectProcess(): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ castToBytes(value: Object): byte[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateClass(createClass: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateJava(createJava: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getBytes(key: String): byte[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ getFieldLazyTableFieldEndpointList(isCapitalized: boolean, humpToUnderline: boolean): List&lt;LazyTableFieldEndpoint&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getString(key: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ isNumeric(str: String): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ mapConverterJava(map: Map&lt;Object, Object&gt;): CreateInfo</TD></TR>
<TR><TD ALIGN="LEFT" >+ put(key: K, value: V, valueClass: String): V</TD></TR>
<TR><TD ALIGN="LEFT" >+ put(key: K, value: V, valueClass: Class): V</TD></TR>
<TR><TD ALIGN="LEFT" >+ putUnique(key: K, value: V): V</TD></TR>
<TR><TD ALIGN="LEFT" >+ toEasyTableAnnotation(): ClassLazyTableEndpoint</TD></TR>
<TR><TD ALIGN="LEFT" >+ toEasyTableAnnotation(isCapitalized: boolean): ClassLazyTableEndpoint</TD></TR>
<TR><TD ALIGN="LEFT" >+ toEasyTableAnnotation(isCapitalized: boolean, humpToUnderline: boolean): ClassLazyTableEndpoint</TD></TR>
<TR><TD ALIGN="LEFT" >+ verificationKey(key: String): JavaVerification</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EasySmartConverterAbstract1993642178[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EasySmartConverterAbstract</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EasySmartFillFieldConverter1993642178[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EasySmartFillFieldConverter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createInfo2String(createInfo: CreateInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ innerClass2String(innerClass: CreateInfo): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ targetClassWriteAttributeFieldList(createInfo: CreateInfo): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EasySmartFillFieldConverterAbstract1993642178[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EasySmartFillFieldConverterAbstract</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ converter(source: Object, target: Object): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ smartFillField(source: Object, target: Object)</TD></TR>
<TR><TD ALIGN="LEFT" ># targetClassWriteAttributeFieldList(createInfo: CreateInfo): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

EasyUpsertExtractKafkaProducer260969305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)EasyUpsertExtractKafkaProducer</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   kafkaProducer: KafkaProducer&lt;String, String&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ afterPropertiesSet()</TD></TR>
<TR><TD ALIGN="LEFT" >+ sendAsync(code: String, topic: String, value: Object): Future&lt;RecordMetadata&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ sendAsync(code: String, topic: String, value: Object, callback: Callback): Future&lt;RecordMetadata&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ sendSync(code: String, topic: String, value: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ sendSync(code: String, topic: String, value: Object, waitSecond: int)</TD></TR>
<TR><TD ALIGN="LEFT" >- toJsonString(object: Object): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ElasticsearchEasyUpsert643245416[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ElasticsearchEasyUpsert</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   elasticsearchProperties: SpringBootElasticsearchConfigProperties [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   springUpsertAutoConfigure: SpringUpsertAutoConfigure [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   webClient: WebClient [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ afterPropertiesSet()</TD></TR>
<TR><TD ALIGN="LEFT" ># asySend(uri: String, file: File)</TD></TR>
<TR><TD ALIGN="LEFT" >+ fileSize(size: long): String</TD></TR>
<TR><TD ALIGN="LEFT" >- send()</TD></TR>
<TR><TD ALIGN="LEFT" >+ upsert(list: List&lt;T&gt;, classSchema: ClassSchema): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Field1192948023[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Field</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   field: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   optional: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   parameters: Map&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   scale: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   type: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   version: Integer [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ init()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FieldLazyTableFieldEndpoint728169074[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FieldLazyTableFieldEndpoint</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ clone(): LazyTableFieldEndpoint</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FieldLazyTableIndexEndpoint725250714[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FieldLazyTableIndexEndpoint</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FieldRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FieldRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(fieldList: List&lt;Field&gt;): Result&lt;Field&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(field: Field): Result&lt;List&lt;Field&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(field: Field): Result&lt;Field&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, field: Field): Result&lt;LazyPage&lt;Field&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(field: Field): Result&lt;Field&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(field: Field): Result&lt;Field&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FileProvider1513367013[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FileProvider</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ add(data: MultipartFile, name: String, id: Long, length: String, describe: String, type: String, uid: String): Result&lt;FileUo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findMusicDataById(id: Long, httpServletResponse: HttpServletResponse)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FileRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FileRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(fileList: List&lt;File&gt;): Result&lt;File&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(file: File): Result&lt;List&lt;File&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(file: File): Result&lt;File&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, file: File): Result&lt;LazyPage&lt;File&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(file: File): Result&lt;File&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(file: File): Result&lt;File&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

FileUtil112403562[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)FileUtil</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addFileContent(fileName: String): BufferedWriter</TD></TR>
<TR><TD ALIGN="LEFT" >+ aggregateAllFilesOnFolder(folderPath: String, depth: boolean, aggregateSuffix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ aggregateAllFilesOnFolder(folderPath: String, depth: boolean, bufferedWriter: BufferedWriter, aggregateSuffix: String): BufferedWriter</TD></TR>
<TR><TD ALIGN="LEFT" >+ aggregateFiles(fileList: List&lt;File&gt;, aggregateFile: File)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createFile(path: String, fileName: String): File</TD></TR>
<TR><TD ALIGN="LEFT" >+ createFileBufferedWriter(file: File): BufferedWriter</TD></TR>
<TR><TD ALIGN="LEFT" >+ createFileBufferedWriter(path: String, fileName: String): BufferedWriter</TD></TR>
<TR><TD ALIGN="LEFT" >+ createFileBufferedWriter(path: String, prefix: String, suffix: String, fileName: String): BufferedWriter</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ modifyLineWithChart(path: String, chart: String, replaceMap: Map&lt;String, String&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ modifyLineWithChart(file: File, chart: String, replaceMap: Map&lt;String, String&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ readFileContent(fileName: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

H2ClassLazyTableEndpoint574492854[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)H2ClassLazyTableEndpoint</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   log: Logger [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   packageName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ alterTableSQL(currentColumnNameList: List&lt;LazyTableFieldEndpoint&gt;, dropColumn: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ creatTableSQL(): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ specifiedFieldAnnotation(fieldType: LayerFieldType): List&lt;LazyTableFieldEndpoint&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

H2FieldLazyTableFieldEndpoint574492854[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)H2FieldLazyTableFieldEndpoint</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ clone(): LazyTableFieldEndpoint</TD></TR>
<TR><TD ALIGN="LEFT" >+ createColumn(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

H2LazyOperationMethodPerfect252073952[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)H2LazyOperationMethodPerfect</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyOperationConfig: LazyOperationConfig [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   log: Logger [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" ># perfect(entityClass: Class, connection: Connection)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

H2LazyOperationMethodSmartUpsert252073952[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)H2LazyOperationMethodSmartUpsert</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyOperationConfig: LazyOperationConfig [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   log: Logger [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ accurateExecution(connection: Connection, param: Object): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

H2LazyOperationMethodUpdateTable252073952[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)H2LazyOperationMethodUpdateTable</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyOperationConfig: LazyOperationConfig [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   log: Logger [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" ># update(entityClass: Class, connection: Connection)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

H2LazyOperationMethodUpsert252073952[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)H2LazyOperationMethodUpsert</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyOperationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

H2LazyOperationMethodUpsertRemoveNull252073952[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)H2LazyOperationMethodUpsertRemoveNull</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyOperationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HBaseFieldAnalyze1383119070[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HBaseFieldAnalyze</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyze(analyzeParameter: AnalyzeParameter): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ supportParameter(analyzeParameter: AnalyzeParameter): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HBaseLayerAnalyze1383119070[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HBaseLayerAnalyze&lt;P&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzeClass(clazz: Class): HBaseTable</TD></TR>
<TR><TD ALIGN="LEFT" >+ analyzeField(clazz: Class): List&lt;AnalyzeField&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HBaseOperationInsertListMethod352028538[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HBaseOperationInsertListMethod</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, args: Object...): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HBaseOperationInsertMethod352028538[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HBaseOperationInsertMethod</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, args: Object...): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HBaseOperationMethodAbstract352028538[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HBaseOperationMethodAbstract</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   UNIQUE_FIELD: Map&lt;Class, List&lt;AnalyzeField&gt;&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ after(o: HBaseExecuteParams): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ before(o: HBaseExecuteParams): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ hBaseRow(analyzeFieldList: List&lt;AnalyzeField&gt;, source: Object): String</TD></TR>
<TR><TD ALIGN="LEFT" ># perfectTable(admin: Admin, source: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ run(hBaseExecuteParam: HBaseExecuteParams): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HBaseOperationProxy2092719285[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HBaseOperationProxy</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   HBASE_OPERATION_METHOD_MAP: Map&lt;Class&lt;? extends HBaseOperationMethodAdapter&gt;, HBaseOperationMethodAdapter&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   connection: Connection [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   hBaseOperationMethodList: List&lt;HBaseOperationMethodAdapter&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ afterPropertiesSet()</TD></TR>
<TR><TD ALIGN="LEFT" >+ invoke(proxy: Object, method: Method, args: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HBaseOperationUpsertListMethod352028538[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HBaseOperationUpsertListMethod</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, args: Object...): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HBaseOperationUpsertMethod352028538[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HBaseOperationUpsertMethod</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, args: Object...): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

HBaseUpsertSink260969305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HBaseUpsertSink</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   hBaseOperation: HBaseOperation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   springUpsertAutoConfigure: SpringUpsertAutoConfigure [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ upsert(list: List&lt;T&gt;, classSchema: ClassSchema): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InterfaceProvider300835036[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InterfaceProvider</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   applicationContext: ApplicationContext [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ run(args: String...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ scanInterface(): List&lt;Interface&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InterfaceRepositoryImpl1237355193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InterfaceRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   applicationContext: ApplicationContext [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ delete(interface_: Interface): Result&lt;Interface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(interface_: Interface): Result&lt;List&lt;Interface&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(interface_: Interface): Result&lt;Interface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ run(args: String...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ scanInterface(): List&lt;Interface&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(interface_: Interface): Result&lt;Interface&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InternalLinkBuild1911961778[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InternalLinkBuild&lt;T&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyOperation: LazyBaseOperation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   type: Class&lt;T&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># createExecute(persistenceRepository: PersistenceRepository): Execute&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># createExecute(): LambdaExecute&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># createExecute(rResult: Collection&lt;?&gt;): Execute&lt;R&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># getClassT(basicComparison: BasicComparison&lt;T, ?, ?, ?&gt;): Class&lt;T&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

InternalLinkExecute1893722297[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)InternalLinkExecute&lt;T&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   persistenceRepository: PersistenceRepository [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   rResultCollection: Collection&lt;?&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ collectOne(aClass: Class): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ collectOne(): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ collection(aClass: Class&lt;R&gt;): List&lt;R&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ collection(): List&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ page(lazyPage: LazyPage&lt;R&gt;): LazyPage&lt;R&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ page(lazyPage: LazyPage&lt;R&gt;, rClass: Class&lt;R&gt;): LazyPage&lt;R&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ persistenceRepository(): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ stream(rClass: Class&lt;R&gt;): Stream&lt;R&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ stream(): Stream&lt;T&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

JavaVerification2031081566[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)JavaVerification</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   isJava: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   newName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   oldName: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ setJava(isJava: boolean): JavaVerification</TD></TR>
<TR><TD ALIGN="LEFT" >+ setNewName(newName: String): JavaVerification</TD></TR>
<TR><TD ALIGN="LEFT" >+ setOldName(oldName: String): JavaVerification</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

JdbcTokenStore165425348[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)JdbcTokenStore</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   authorizationProperties: AuthorizationProperties [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   deleteAccessTokenFromRefreshTokenSql: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   deleteAccessTokenSql: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   deleteRefreshTokenSql: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   insertAccessTokenSql: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   insertRefreshTokenSql: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   selectAccessTokenAuthenticationSql: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   selectAccessTokenFromAuthenticationSql: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   selectAccessTokenSql: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   selectAccessTokensFromClientIdSql: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   selectAccessTokensFromUserNameAndClientIdSql: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   selectAccessTokensFromUserNameSql: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   selectRefreshTokenAuthenticationSql: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   selectRefreshTokenSql: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   updateAccessTokenSql: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ convertAccessToken(var1: String): AccessTokenRO</TD></TR>
<TR><TD ALIGN="LEFT" ># deserializeAccessToken(token: byte[]): AccessTokenRO</TD></TR>
<TR><TD ALIGN="LEFT" ># deserializeAuthentication(token: byte[]): Authentication</TD></TR>
<TR><TD ALIGN="LEFT" ># extractTokenKey(value: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ findTokensByClientId(clientId: String): Collection&lt;AccessTokenRO&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findTokensByClientIdAndUserName(clientId: String, userName: String): Collection&lt;AccessTokenRO&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findTokensByUserName(userName: String): Collection&lt;AccessTokenRO&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAccessToken(authenticationId: String): AccessTokenRO</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAccessToken(authentication: Authentication): AccessTokenRO</TD></TR>
<TR><TD ALIGN="LEFT" >+ getAccessToken(userDetails: UserDetails, scope: String): AccessTokenRO</TD></TR>
<TR><TD ALIGN="LEFT" >+ readAccessToken(token: String, clazz: Class&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ refreshAccessToken(userDetails: UserDetails)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAccessToken(var1: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeAccessTokenUsingRefreshToken(refreshToken: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- removeNulls(accessTokenROS: List&lt;AccessTokenRO&gt;): List&lt;AccessTokenRO&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeRefreshToken(token: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># serializeAccessToken(token: AccessTokenRO): byte[]</TD></TR>
<TR><TD ALIGN="LEFT" ># serializeAuthentication(authentication: Authentication): byte[]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

JsonFileConverter53368139[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)JsonFileConverter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ listBean2JSONString(collection: Collection): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ listBean2ListJSONString(collection: Collection): List&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseArray(str: String): List&lt;String&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseBean2map(bean: Object): Map&lt;String, Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseBean2map(bean: Object, iEnumList: Map&lt;String, Map&lt;String, String&gt;&gt;): Map&lt;String, Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ simpleBean2JSONString(bean: Object): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

JsonUtils112403562[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)JsonUtils</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ convertObject(fromValue: Object, toValueType: Class&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseObject(fromValue: String, toValueType: Class&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseObject(src: InputStream, valueType: Class&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseObject(src: byte[], valueType: Class&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseObject(fromValue: String, toValueType: TypeReference&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ toJsonString(value: Object): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

JsonUtils2145666423[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)JsonUtils</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ convertObject(fromValue: Object, toValueType: Class&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseObject(fromValue: String, toValueType: Class&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ parseObject(fromValue: String, toValueType: TypeReference&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ toJsonString(value: Object): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

KafkaEasyUpsertSink260969305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)KafkaEasyUpsertSink</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   easyUpsertExtractKafkaProducer: EasyUpsertExtractKafkaProducer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   springUpsertAutoConfigure: SpringUpsertAutoConfigure [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   userConvertService: UserConvertService [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ upsert(list: List&lt;T&gt;, classSchema: ClassSchema): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

KafkaJsonMessage2081345617[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)KafkaJsonMessage&lt;T&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   payload: T [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   schema: TargetJsonSchema [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ getKafkaPayload(formValue: String, payloadType: Class&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ newInstance(): KafkaJsonMessage</TD></TR>
<TR><TD ALIGN="LEFT" >+ newInstance(payload: T): KafkaJsonMessage&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ newInstance(payload: T, schemaName: String): KafkaJsonMessage&lt;T&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LambdaBasicComparison969335457[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LambdaBasicComparison&lt;T&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   className: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   classT: Class&lt;T&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   sqlPart: SqlPart [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ apply(applySql: String, values: Object...): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ between(row: Snippet&lt;T, ?&gt;, leftVar: Object, rightVar: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ betweenO(row: Snippet&lt;T, ?&gt;, leftVar: Object, rightVar: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># columnToString(row: Snippet&lt;T, ?&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ eq(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ eqIgnoreEmpty(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ eqo(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ eqoIgnoreEmpty(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ gt(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ gto(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ in(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ inIgnoreEmpty(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ inIgnoreEmptyO(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ ino(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ like(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ likeO(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ lt(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ lto(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ ne(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ neo(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notIn(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notIno(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notLike(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ notLikeO(row: Snippet&lt;T, ?&gt;, var: Object): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ orderByAsc(rows: Snippet&lt;T, ?&gt;...): LambdaBasicComparison&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ orderByDesc(rows: Snippet&lt;T, ?&gt;...): LambdaBasicComparison&lt;T&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LambdaBuild1911961778[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LambdaBuild&lt;T&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyOperation: LazyBaseOperation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   type: Class&lt;T&gt; [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># createExecute(persistenceRepository: PersistenceRepository): Execute&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># createExecute(): LambdaExecute&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># getClassT(basicComparison: BasicComparison&lt;T, ?, ?, ?&gt;): Class&lt;T&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LayerFieldAnalyze653387000[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LayerFieldAnalyze</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyze(analyzeParameter: AnalyzeParameter): List&lt;AnalyzeField&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ supportParameter(analyzeParameter: AnalyzeParameter): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LayerMethodAnalyze653387000[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LayerMethodAnalyze</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyze(analyzeParameter: AnalyzeParameter): Annotation</TD></TR>
<TR><TD ALIGN="LEFT" >+ supportParameter(analyzeParameter: AnalyzeParameter): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyDDLOperationProxy1325750148[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyDDLOperationProxy</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   LAZY_OPERATION_DDL_METHOD_MAP: ConcurrentHashMap&lt;String, LazyOperationMethod&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyDDLOperationMethodList: List&lt;LazyDDLOperationMethod&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyDynamicAdapter: LazyDynamicAdapter [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ afterPropertiesSet()</TD></TR>
<TR><TD ALIGN="LEFT" >+ determineConnection(): DataSource</TD></TR>
<TR><TD ALIGN="LEFT" >+ retryInvoke(proxy: Object, method: Method, args: Object[], retryTime: int, throwable: Throwable, hasRetry: boolean): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyDQLOperationProxy1325750148[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyDQLOperationProxy</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   LAZY_OPERATION_DQL_METHOD_MAP: ConcurrentHashMap&lt;String, LazyOperationMethod&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyDynamicAdapter: LazyDynamicAdapter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyOperationDQLMethods: List&lt;LazyDQLOperationMethod&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ afterPropertiesSet()</TD></TR>
<TR><TD ALIGN="LEFT" >+ determineConnection(): DataSource</TD></TR>
<TR><TD ALIGN="LEFT" >+ retryInvoke(proxy: Object, method: Method, args: Object[], retryTime: int, throwable: Throwable, hasRetry: boolean): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyDataFactory457514967[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyDataFactory</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ handler(o: Object, field: Field, value: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ handler(o: Object, clazz: Class&lt;T&gt;): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ handler(o: Object, clazzType: Type): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ support(fieldType: Type): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyLambdaStream590796285[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyLambdaStream</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyOperation: LazyBaseOperation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ count(comparison: BasicComparison&lt;T, ?, ?, ?&gt;): Long</TD></TR>
<TR><TD ALIGN="LEFT" >+ createTable(entityClasss: Class&lt;T&gt;...): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(comparison: BasicComparison&lt;T, ?, ?, ?&gt;): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(persistenceRepository: PersistenceRepository): List&lt;Object&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeOne(persistenceRepository: PersistenceRepository): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeSQL(sql: String, t: Class&lt;T&gt;, params: Object...): List&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ executeSQLForBean(sql: String, t: Class&lt;T&gt;, params: Object...): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ exists(comparison: BasicComparison&lt;T, ?, ?, ?&gt;): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ insert(save: T)</TD></TR>
<TR><TD ALIGN="LEFT" >+ of(clazz: Class&lt;T&gt;): Build&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ perfect(entityClasss: Class&lt;T&gt;...): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ perfect(tableEndpoints: LazyTableEndpoint...): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveOrUpdate(save: T)</TD></TR>
<TR><TD ALIGN="LEFT" >+ scriptRunner(resources: Resource...): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ select(comparison: BasicComparison&lt;T, ?, ?, ?&gt;): Execute&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ select(sql: String, returnType: Class&lt;T&gt;): Execute&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ select(comparison: BasicComparison&lt;T, ?, ?, ?&gt;, snippets: Snippet&lt;T, ?&gt;...): Execute&lt;T&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ select(comparison: BasicComparison&lt;T, ?, ?, ?&gt;, abstractInternalLinkBasicComparisons: AbstractInternalLinkBasicComparison&lt;R, ?, ?, ?, ?&gt;...): Execute&lt;R&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ smartUpsert(save: T...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ stringScriptRunner(scripts: String...): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(t: T, comparison: BasicComparison&lt;T, ?, ?, ?&gt;): Integer</TD></TR>
<TR><TD ALIGN="LEFT" >+ updateTable(entityClasss: Class&lt;T&gt;...): T</TD></TR>
<TR><TD ALIGN="LEFT" >+ upsert(save: T)</TD></TR>
<TR><TD ALIGN="LEFT" >+ upsertRemoveNull(save: T)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodCreateTable1506107375[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodCreateTable</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" ># create(entityClass: Class, connection: Connection)</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodDeleteById1506107096[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodDeleteById</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodDeleteByIdList1753658515[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodDeleteByIdList</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodExecute1506106972[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodExecute</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodExecuteOne1506106972[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodExecuteOne</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodExecuteSQL1506106972[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodExecuteSQL</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodExecuteSQLForBean1506106972[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodExecuteSQLForBean</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodInsert1506107096[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodInsert</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ accurateExecution(connection: Connection, param: Object): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodPage1506106972[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodPage</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   countSql: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyPage: LazyPage [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   limitSql: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >- count(connection: Connection)</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodPerfect1506107375[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodPerfect</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" ># perfect(entityClass: Class, connection: Connection)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodSaveOrUpdate1506107096[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodSaveOrUpdate</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ accurateExecution(connection: Connection, saveOrUpdate: Object): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodScriptRunner1506107375[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodScriptRunner</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodSelectList1506106972[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodSelectList</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectPreparedStatementSQL(o: Object): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodSelectOne1753658515[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodSelectOne</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ selectPreparedStatementSQL(o: Object): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodSmartUpsert1506107096[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodSmartUpsert</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ accurateExecution(connection: Connection, param: Object): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodStringScriptRunner1506107375[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodStringScriptRunner</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodUpdateAllById1753658515[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodUpdateAllById</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodUpdateById1753658515[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodUpdateById</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodUpdateTable1506107375[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodUpdateTable</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
<TR><TD ALIGN="LEFT" ># update(entityClass: Class, connection: Connection)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodUpsert1506107096[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodUpsert</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ accurateExecution(connection: Connection, param: Object): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationMethodUpsertRemoveNull1506107096[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationMethodUpsertRemoveNull</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ accurateExecution(connection: Connection, param: Object): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ analyzePersistenceRepository(sourceParams: Object[]): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ execute(connection: Connection, sourceParams: Object[]): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationProxy1325750148[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationProxy</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   LAZY_OPERATION_METHOD_MAP: ConcurrentHashMap&lt;Class&lt;? extends LazyOperationMethod&gt;, LazyOperationMethod&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   cureAdapter: CureAdapter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyDynamicAdapter: LazyDynamicAdapter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyOperationMethods: List&lt;LazyOperationMethod&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ afterPropertiesSet()</TD></TR>
<TR><TD ALIGN="LEFT" >+ determineConnection(): DataSource</TD></TR>
<TR><TD ALIGN="LEFT" >+ retryInvoke(proxy: Object, method: Method, args: Object[], retryTime: int, throwable: Throwable, hasRetry: boolean): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyOperationSmartAutoStuffed470746827[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyOperationSmartAutoStuffed</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   threadPoolExecutor: ThreadPoolExecutor [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ stuffed(table: LazyTableInfo, num: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ stuffed(tableClass: Class&lt;T&gt;, num: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ stuffedJava(schema: String, tableName: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- stuffedSimple(table: LazyTableInfo, lazyColumnList: List&lt;LazyColumn&gt;, num: Long)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyRedisTemplate2037199553[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyRedisTemplate&lt;K, V&gt;</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   MASTER: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dyDatabase: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   redisConnectionFactoryMap: Map&lt;Integer, RedisConnectionFactory&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   redisProperties: RedisProperties [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ getConnectionFactory(database: int): RedisConnectionFactory</TD></TR>
<TR><TD ALIGN="LEFT" >+ reset()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazySmartLazyOperation470746827[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazySmartLazyOperation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   LAZY_SMART_EXECUTOR: ThreadPoolExecutor [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   autoStuffedLazyOperation: SmartLazyOperationAutoStuffed [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   perfect: Perfect [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ saveSoftSqlFile(nameDatabase: String): File</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveSqlFile(nameDatabase: String): File</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveUpsertSqlFile(nameDatabase: String): File</TD></TR>
<TR><TD ALIGN="LEFT" >+ scrollTableData(tableName: String, consumer: Consumer&lt;LazyPage&lt;EasyHashMap&gt;&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ scrollTableData(tableName: String, lazyPage: LazyPage, consumer: Consumer&lt;LazyPage&lt;EasyHashMap&gt;&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ showDatabases(): List&lt;LazyDatabase&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ showTables(schema: String): List&lt;LazyTableInfo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ stuffed(schema: String, table: String, num: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ stuffed(table: Class, num: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ stuffed(table: LazyTableInfo, num: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ stuffedAll(num: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ stuffedJava(schema: String, tableName: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyTableFieldUtil1673108896[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyTableFieldUtil</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzeFieldOnAnnotation(clazz: Class&lt;T&gt;, tableFileIndexType: LayerFieldType): List&lt;LazyTableFieldEndpoint&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ cleanSpecialColumn(javaColumn: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyTableIndexUtil1673108896[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyTableIndexUtil</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzeFieldIndex(lazyTableField: LazyTableField): LazyTableIndexEndpoint[]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyTableStructure1673649790[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyTableStructure</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   payload: List&lt;List&lt;LazyTableFieldEndpoint&gt;&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   schema: LazyTableEndpoint [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ payload(): List&lt;List&lt;LazyTableFieldEndpoint&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ schema(): LazyTableEndpoint</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyTableStructureConverterFactory2019592261[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyTableStructureConverterFactory</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ dataStructure(source: Object): LazyTableStructure</TD></TR>
<TR><TD ALIGN="LEFT" >- wrapperArray(array: Object[]): LazyTableStructure</TD></TR>
<TR><TD ALIGN="LEFT" >+ wrapperBean(o: Object): LazyTableStructure</TD></TR>
<TR><TD ALIGN="LEFT" >+ wrapperEasyHashMap(easyHashMap: EasyHashMap): LazyTableStructure</TD></TR>
<TR><TD ALIGN="LEFT" >+ wrapperIterable(iterable: Iterable): LazyTableStructure</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyTableUpsertConverterFactory2019592261[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyTableUpsertConverterFactory</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ insert(bean: Object): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ insert(bean: Object, sqlStencil: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ insert(bean: Object, sqlStencil: String, ignoreNull: boolean): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ insertRemoveNull(bean: Object): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ upsert(bean: Object): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ upsertRemoveNull(bean: Object): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LazyTableUtil1673108896[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LazyTableUtil</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ analyzeLazyTable(clazz: Class&lt;?&gt;): LazyTableEndpoint</TD></TR>
<TR><TD ALIGN="LEFT" >+ createJava(tableEndpoint: ClassLazyTableEndpoint)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createJava(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering)</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaApplication(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaApplicationFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaApplicationImpl(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaApplicationImplFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaAssembler(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaAssemblerFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaCommand(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaCommandFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createJavaController(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaControllerFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaControllerWithLazy(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaControllerWithLazyFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaDomain(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaDomainFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaDomainRepository(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaDomainRepositoryFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createJavaEntity(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >+ createJavaEntityFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaInfrastructureConverter(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaInfrastructureConverterFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaInfrastructureEntity(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaInfrastructureEntityFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaInfrastructureMapper(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaInfrastructureMapperFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaInfrastructurePersistence(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaInfrastructurePersistenceFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createJavaMapper(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaMapperFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createJavaMapperXml(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaMapperXmlFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createJavaService(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >+ createJavaServiceFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ createJavaServiceImpl(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >- createJavaServiceImplFile(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, resourceFilePrefix: String)</TD></TR>
<TR><TD ALIGN="LEFT" ># generateAttributeFileList(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, importClass: List&lt;String&gt;): String</TD></TR>
<TR><TD ALIGN="LEFT" ># generateClassAnnotation(tableEndpoint: ClassLazyTableEndpoint, reverseEngineering: ReverseEngineering, importClass: List&lt;String&gt;, classAnnotation: List&lt;String&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateClassDescribe(tableEndpoint: ClassLazyTableEndpoint): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ getTableName(clazz: Class): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

LocalStorageClassAnnotation503400880[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)LocalStorageClassAnnotation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ easySmart(clazz: Class, isForceDuplicateNameSwitch: boolean): EasySmart</TD></TR>
<TR><TD ALIGN="LEFT" >+ getEasyTableAnnotation(clazz: Class, isForceDuplicateNameSwitch: boolean): EasySmart</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MAdsFinDwsjyyQuanxianCwryxxbRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MAdsFinDwsjyyQuanxianCwryxxbRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(mAdsFinDwsjyyQuanxianCwryxxbList: List&lt;MAdsFinDwsjyyQuanxianCwryxxb&gt;): Result&lt;MAdsFinDwsjyyQuanxianCwryxxb&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(mAdsFinDwsjyyQuanxianCwryxxb: MAdsFinDwsjyyQuanxianCwryxxb): Result&lt;List&lt;MAdsFinDwsjyyQuanxianCwryxxb&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(mAdsFinDwsjyyQuanxianCwryxxb: MAdsFinDwsjyyQuanxianCwryxxb): Result&lt;MAdsFinDwsjyyQuanxianCwryxxb&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, mAdsFinDwsjyyQuanxianCwryxxb: MAdsFinDwsjyyQuanxianCwryxxb): Result&lt;LazyPage&lt;MAdsFinDwsjyyQuanxianCwryxxb&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(mAdsFinDwsjyyQuanxianCwryxxb: MAdsFinDwsjyyQuanxianCwryxxb): Result&lt;MAdsFinDwsjyyQuanxianCwryxxb&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(mAdsFinDwsjyyQuanxianCwryxxb: MAdsFinDwsjyyQuanxianCwryxxb): Result&lt;MAdsFinDwsjyyQuanxianCwryxxb&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MDimFinDwsjyyQuanxianDwysqdbRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MDimFinDwsjyyQuanxianDwysqdbRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(mDimFinDwsjyyQuanxianDwysqdbList: List&lt;MDimFinDwsjyyQuanxianDwysqdb&gt;): Result&lt;MDimFinDwsjyyQuanxianDwysqdb&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(mDimFinDwsjyyQuanxianDwysqdb: MDimFinDwsjyyQuanxianDwysqdb): Result&lt;List&lt;MDimFinDwsjyyQuanxianDwysqdb&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(mDimFinDwsjyyQuanxianDwysqdb: MDimFinDwsjyyQuanxianDwysqdb): Result&lt;MDimFinDwsjyyQuanxianDwysqdb&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, mDimFinDwsjyyQuanxianDwysqdb: MDimFinDwsjyyQuanxianDwysqdb): Result&lt;LazyPage&lt;MDimFinDwsjyyQuanxianDwysqdb&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(mDimFinDwsjyyQuanxianDwysqdb: MDimFinDwsjyyQuanxianDwysqdb): Result&lt;MDimFinDwsjyyQuanxianDwysqdb&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(mDimFinDwsjyyQuanxianDwysqdb: MDimFinDwsjyyQuanxianDwysqdb): Result&lt;MDimFinDwsjyyQuanxianDwysqdb&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MDimFinDwsjyyQuanxianQsryxxRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MDimFinDwsjyyQuanxianQsryxxRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(mDimFinDwsjyyQuanxianQsryxxList: List&lt;MDimFinDwsjyyQuanxianQsryxx&gt;): Result&lt;MDimFinDwsjyyQuanxianQsryxx&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(mDimFinDwsjyyQuanxianQsryxx: MDimFinDwsjyyQuanxianQsryxx): Result&lt;List&lt;MDimFinDwsjyyQuanxianQsryxx&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(mDimFinDwsjyyQuanxianQsryxx: MDimFinDwsjyyQuanxianQsryxx): Result&lt;MDimFinDwsjyyQuanxianQsryxx&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, mDimFinDwsjyyQuanxianQsryxx: MDimFinDwsjyyQuanxianQsryxx): Result&lt;LazyPage&lt;MDimFinDwsjyyQuanxianQsryxx&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(mDimFinDwsjyyQuanxianQsryxx: MDimFinDwsjyyQuanxianQsryxx): Result&lt;MDimFinDwsjyyQuanxianQsryxx&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(mDimFinDwsjyyQuanxianQsryxx: MDimFinDwsjyyQuanxianQsryxx): Result&lt;MDimFinDwsjyyQuanxianQsryxx&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MSysLogNothingUserRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MSysLogNothingUserRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(mSysLogNothingUserList: List&lt;MSysLogNothingUser&gt;): Result&lt;MSysLogNothingUser&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(mSysLogNothingUser: MSysLogNothingUser): Result&lt;List&lt;MSysLogNothingUser&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(mSysLogNothingUser: MSysLogNothingUser): Result&lt;MSysLogNothingUser&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, mSysLogNothingUser: MSysLogNothingUser): Result&lt;LazyPage&lt;MSysLogNothingUser&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(mSysLogNothingUser: MSysLogNothingUser): Result&lt;MSysLogNothingUser&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(mSysLogNothingUser: MSysLogNothingUser): Result&lt;MSysLogNothingUser&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MSysLoginRecordRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MSysLoginRecordRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(mSysLoginRecordList: List&lt;MSysLoginRecord&gt;): Result&lt;MSysLoginRecord&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(mSysLoginRecord: MSysLoginRecord): Result&lt;List&lt;MSysLoginRecord&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(mSysLoginRecord: MSysLoginRecord): Result&lt;MSysLoginRecord&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, mSysLoginRecord: MSysLoginRecord): Result&lt;LazyPage&lt;MSysLoginRecord&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(mSysLoginRecord: MSysLoginRecord): Result&lt;MSysLoginRecord&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(mSysLoginRecord: MSysLoginRecord): Result&lt;MSysLoginRecord&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MenuRepositoryImpl1237355193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MenuRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ delete(menu: Menu): Result&lt;Menu&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(menu: Menu): Result&lt;List&lt;Menu&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(menu: Menu): Result&lt;Menu&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(menu: Menu): Result&lt;Menu&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MethodRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MethodRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(methodList: List&lt;Method&gt;): Result&lt;Method&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(method: Method): Result&lt;List&lt;Method&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(method: Method): Result&lt;Method&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, method: Method): Result&lt;LazyPage&lt;Method&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(method: Method): Result&lt;Method&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(method: Method): Result&lt;Method&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MusicProvider1513367013[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MusicProvider</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># deleteById(id: Long): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ findMusicDataById(id: Long, httpServletResponse: HttpServletResponse)</TD></TR>
<TR><TD ALIGN="LEFT" >+ insertOrUpdate(musicData: MultipartFile, name: String, id: Long, musicUrl: String, singer: String, album: String, duration: String): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ retrievePage(size: int, current: int, musicUo: MusicUo): Result&lt;MusicUo&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MusicRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MusicRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(musicList: List&lt;Music&gt;): Result&lt;Music&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(music: Music): Result&lt;List&lt;Music&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(music: Music): Result&lt;Music&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, music: Music): Result&lt;LazyPage&lt;Music&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(music: Music): Result&lt;Music&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(music: Music): Result&lt;Music&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MySQLEasyUpsertSink260969305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MySQLEasyUpsertSink</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   dynamicLazyDSAdapter: DynamicLazyDSAdapter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   springUpsertAutoConfigure: SpringUpsertAutoConfigure [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   userConvertService: UserConvertService [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ afterPropertiesSet()</TD></TR>
<TR><TD ALIGN="LEFT" ># execute(dataSource: DataSource, list: List&lt;T&gt;): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ upsert(list: List&lt;T&gt;, classSchema: ClassSchema): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MySQLUtil1673108896[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MySQLUtil</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ convertValueToMysqlColumnData(fieldValue: Object): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ isBinary(fieldValue: Object): byte[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ sqlValue(rowValue: Object): Object</TD></TR>
<TR><TD ALIGN="LEFT" >+ sqlValue(rowValue: Object, hasComma: boolean): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PerfectLazyOperation470746827[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PerfectLazyOperation</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   exportDataConfiguration: ExportDataConfiguration [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tableTemp: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ saveSoftSqlFile()</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveSoftSqlFile(nameDatabase: String): File</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveSqlFile(nameDatabase: String): File</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveSqlFile()</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveUpsertSqlFile(nameDatabase: String): File</TD></TR>
<TR><TD ALIGN="LEFT" >+ showDatabases(): List&lt;LazyDatabase&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ showTables(tableSchema: String): List&lt;LazyTableInfo&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PersistenceRepositoryFactory1505015926[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PersistenceRepositoryFactory</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ create(lazyOperationConfig: LazyOperationConfig): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ create(): PersistenceRepository</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ProjectRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ProjectRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(projectList: List&lt;Project&gt;): Result&lt;Project&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(project: Project): Result&lt;List&lt;Project&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(project: Project): Result&lt;Project&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, project: Project): Result&lt;LazyPage&lt;Project&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(project: Project): Result&lt;Project&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(project: Project): Result&lt;Project&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PulsarEasyUpsertSink260969305[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PulsarEasyUpsertSink</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   configure: SpringUpsertAutoConfigure [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   pulsarClient: PulsarClient [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ upsert(list: List&lt;T&gt;, classSchema: ClassSchema): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RedisSearchUpsertSink643245416[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RedisSearchUpsertSink</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   client: Client [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyRedisTemplate: LazyRedisTemplate [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   springUpsertAutoConfigure: SpringUpsertAutoConfigure [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ upsert(list: List&lt;T&gt;, classSchema: ClassSchema): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RedisUpsertSink643245416[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RedisUpsertSink</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyRedisTemplate: LazyRedisTemplate&lt;String, String&gt; [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   springUpsertAutoConfigure: SpringUpsertAutoConfigure [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ upsert(list: List&lt;T&gt;, classSchema: ClassSchema): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReverseEngineering306940328[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReverseEngineering</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   enableLazy: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   enableLazyCrud: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   enableLombokAccessors: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   enableLombokData: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   enableMyBatis: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   enableNormalCrud: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   enableSchema: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   enableSwagger: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   entitySuffix: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   packageName: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   reverseEngineeringMvc: ReverseEngineeringMvc [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ReverseEngineeringMvc306940328[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ReverseEngineeringMvc</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   enableLazyOperationMvc: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   webArchitecture: WebArchitecture [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoleMenuRepositoryImpl1237355193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoleMenuRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(roleMenuList: List&lt;RoleMenu&gt;): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(roleMenu: RoleMenu): Result&lt;List&lt;RoleMenu&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(roleMenu: RoleMenu): Result&lt;RoleMenu&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(roleMenu: RoleMenu): Result&lt;RoleMenu&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ removeRoleMenus(roleId: Long)</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(roleMenu: RoleMenu): Result&lt;RoleMenu&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoleProvider300835036[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoleProvider</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ save(s: S): Result&lt;S&gt;</TD></TR>
<TR><TD ALIGN="LEFT" ># saveRoleMenu(role: Role, menuIds: List&lt;Long&gt;): Result</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

RoleRepositoryImpl1237355193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)RoleRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ delete(role: Role): Result&lt;Role&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(role: Role): Result&lt;List&lt;Role&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(role: Role): Result&lt;Role&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(role: Role): Result&lt;Role&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SQLConverter1453923838[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SQLConverter</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ creatTableSQL(clazz: Class): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ createMybatisResultMap(clazz: Class): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ createSelectSQL(clazz: Class): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ deletePreparedStatementSQL(o: Object): String</TD></TR>
<TR><TD ALIGN="LEFT" ># getDate(o: Object, sf: SimpleDateFormat): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ updatePreparedStatementSQL(o: Object): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ upsertPreparedStatementSQL(collection: Collection, clazz: Class&lt;?&gt;, iEnumList: Map): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ upsertSQL(clazz: Class)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpringBootElasticsearchConfigProperties1110532031[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpringBootElasticsearchConfigProperties</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   connectionTimeout: Duration [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   password: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   readTimeout: Duration [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   uris: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   username: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SpringUpsertAutoConfigure1110532031[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SpringUpsertAutoConfigure</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   batchLimit: Integer [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   cacheFileAddress: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   easyUpsertType: EasyUpsertType [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   forceDuplicateNameSwitch: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   ignoredFields: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   printSql: boolean [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   recordLog: boolean [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ afterPropertiesSet()</TD></TR>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SqlAuditRepositoryImpl541041143[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SqlAuditRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(sqlAuditList: List&lt;SqlAudit&gt;): Result&lt;SqlAudit&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(sqlAudit: SqlAudit): Result&lt;List&lt;SqlAudit&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(sqlAudit: SqlAudit): Result&lt;SqlAudit&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, sqlAudit: SqlAudit): Result&lt;LazyPage&lt;SqlAudit&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(sqlAudit: SqlAudit): Result&lt;SqlAudit&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(sqlAudit: SqlAudit): Result&lt;SqlAudit&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SqlMessageFormatUtil1673108896[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SqlMessageFormatUtil</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ format(pattern: String, arguments: Object...): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SqlPart1456079650[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SqlPart</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   columnAsMap: Map&lt;String, String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   conditionList: List&lt;Condition&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   conditionType: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   executionEnum: ExecutionEnum [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   groupByConditions: List&lt;Condition&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   havingConditions: List&lt;SqlPart&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   ignoreColumnList: List&lt;String&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   joinConditions: List&lt;SqlPart&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lastSql: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   limitSql: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   onlyUseAs: Boolean [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   orSqlPart: List&lt;SqlPart&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   orderConditions: List&lt;Condition&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   prefix: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   primaryClass: Class [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   primaryTable: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   updateSet: Map&lt;String, Object&gt; [0..*]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >- addAnd(condition: Condition)</TD></TR>
<TR><TD ALIGN="LEFT" >+ appendGroupAndOrder(builder: StringBuilder): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >+ appendLimitAndLast(builder: StringBuilder): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
<TR><TD ALIGN="LEFT" >+ columnAs(columnName: String, asName: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ copy(): SqlPart</TD></TR>
<TR><TD ALIGN="LEFT" >+ createCondition(): Condition</TD></TR>
<TR><TD ALIGN="LEFT" >+ groupBy(condition: Condition)</TD></TR>
<TR><TD ALIGN="LEFT" >+ having(condition: SqlPart)</TD></TR>
<TR><TD ALIGN="LEFT" >+ ignoreColumnAs(columnName: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ join(sqlPart: SqlPart)</TD></TR>
<TR><TD ALIGN="LEFT" >+ or(sqlPart: SqlPart)</TD></TR>
<TR><TD ALIGN="LEFT" >+ orderBy(condition: Condition)</TD></TR>
<TR><TD ALIGN="LEFT" >+ persistenceRepository(): PersistenceRepository</TD></TR>
<TR><TD ALIGN="LEFT" >+ put(andOr: AndOr, rowName: Object, type: String, rowValue: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ put(rowName: Object, type: String, rowValue: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ put(andOr: AndOr, rowName: Object, type: String, rowValueType: RowValueType, rowValue: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ put(rowName: Object, type: String, rowValueType: RowValueType, rowValue: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ put(andOr: AndOr, fieldName: String, rowName: Object, type: String, rowValueType: RowValueType, fieldValueName: String, rowValue: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ put(fieldName: String, rowName: Object, type: String, rowValueType: RowValueType, fieldValueName: String, rowValue: Object)</TD></TR>
<TR><TD ALIGN="LEFT" >+ setColumnAsMap(columnAsMap: Map&lt;String, String&gt;): SqlPart</TD></TR>
<TR><TD ALIGN="LEFT" >+ setConditionList(conditionList: List&lt;Condition&gt;): SqlPart</TD></TR>
<TR><TD ALIGN="LEFT" >+ setConditionType(conditionType: String): SqlPart</TD></TR>
<TR><TD ALIGN="LEFT" >+ setExecutionEnum(executionEnum: ExecutionEnum): SqlPart</TD></TR>
<TR><TD ALIGN="LEFT" >+ setGroupByConditions(groupByConditions: List&lt;Condition&gt;): SqlPart</TD></TR>
<TR><TD ALIGN="LEFT" >+ setHavingConditions(havingConditions: List&lt;SqlPart&gt;): SqlPart</TD></TR>
<TR><TD ALIGN="LEFT" >+ setIgnoreColumnList(ignoreColumnList: List&lt;String&gt;): SqlPart</TD></TR>
<TR><TD ALIGN="LEFT" >+ setJoinConditions(joinConditions: List&lt;SqlPart&gt;): SqlPart</TD></TR>
<TR><TD ALIGN="LEFT" >+ setLastSql(lastSql: String): SqlPart</TD></TR>
<TR><TD ALIGN="LEFT" >+ setLimitSql(limitSql: String): SqlPart</TD></TR>
<TR><TD ALIGN="LEFT" >+ setOrSqlPart(orSqlPart: List&lt;SqlPart&gt;): SqlPart</TD></TR>
<TR><TD ALIGN="LEFT" >+ setOrderConditions(orderConditions: List&lt;Condition&gt;): SqlPart</TD></TR>
<TR><TD ALIGN="LEFT" >+ setPrefix(prefix: String): SqlPart</TD></TR>
<TR><TD ALIGN="LEFT" >+ setPrimaryClass(primaryClass: Class): SqlPart</TD></TR>
<TR><TD ALIGN="LEFT" >+ setPrimaryTable(primaryTable: String): SqlPart</TD></TR>
<TR><TD ALIGN="LEFT" >+ setUpdateSet(updateSet: Map&lt;String, Object&gt;): SqlPart</TD></TR>
<TR><TD ALIGN="LEFT" >+ splice(prefix: String): StringBuilder</TD></TR>
<TR><TD ALIGN="LEFT" >+ sql(): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SqlSessionInterceptor777942773[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SqlSessionInterceptor</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   cureAdapter: CureAdapter [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ determineConnection(): DataSource</TD></TR>
<TR><TD ALIGN="LEFT" >+ retryInvoke(proxy: Object, method: Method, args: Object[], retryTime: int, throwable: Throwable, hasRetry: boolean): Object</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

StructureProvider495104145[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)StructureProvider</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyProxyDataSource: LazyProxyDataSource [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ tableStructure(schema: String): Result&lt;DataBaseTableStructure&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SysGeneratorService2024401798[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SysGeneratorService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   generatorConfig: GeneratorConfig [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ generatorCode(tableNames: String[], moduleName: String, packageName: String, author: String): byte[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ queryColumns(tableName: String): List&lt;ColumnEntity&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ queryList(tableName: String, size: Integer, current: Integer): LazyPage</TD></TR>
<TR><TD ALIGN="LEFT" >+ queryTable(tableName: String): TableEntity</TD></TR>
<TR><TD ALIGN="LEFT" >+ queryTableColumnDefaultValue(tableName: String): Map</TD></TR>
<TR><TD ALIGN="LEFT" >+ tableQueryConditions(tableName: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SysUserRepositoryImpl1237355193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SysUserRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ delete(sysUser: SysUser): Result&lt;SysUser&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(sysUser: SysUser): Result&lt;List&lt;SysUser&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(sysUser: SysUser): Result&lt;SysUser&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, sysUser: SysUser): Result&lt;LazyPage&lt;SysUser&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(sysUser: SysUser): Result&lt;SysUser&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SysUserTempRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SysUserTempRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(sysUserTempList: List&lt;SysUserTemp&gt;): Result&lt;SysUserTemp&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(sysUserTemp: SysUserTemp): Result&lt;List&lt;SysUserTemp&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(sysUserTemp: SysUserTemp): Result&lt;SysUserTemp&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, sysUserTemp: SysUserTemp): Result&lt;LazyPage&lt;SysUserTemp&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(sysUserTemp: SysUserTemp): Result&lt;SysUserTemp&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(sysUserTemp: SysUserTemp): Result&lt;SysUserTemp&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TableClassRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TableClassRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(tableClassList: List&lt;TableClass&gt;): Result&lt;TableClass&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(tableClass: TableClass): Result&lt;List&lt;TableClass&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(tableClass: TableClass): Result&lt;TableClass&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, tableClass: TableClass): Result&lt;LazyPage&lt;TableClass&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(tableClass: TableClass): Result&lt;TableClass&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(tableClass: TableClass): Result&lt;TableClass&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TargetJsonSchema2081345617[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TargetJsonSchema</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   fields: List&lt;Field&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   name: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   type: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># canEqual(other: Object): boolean</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TranslateProvider1513367013[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TranslateProvider</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   restTemplate: RestTemplate [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ baiduTranslate(word: String, from: String, to: String): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ translate(word: String): Result</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TranslateRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TranslateRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(translateList: List&lt;Translate&gt;): Result&lt;Translate&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(translate: Translate): Result&lt;List&lt;Translate&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(translate: Translate): Result&lt;Translate&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, translate: Translate): Result&lt;LazyPage&lt;Translate&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(translate: Translate): Result&lt;Translate&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(translate: Translate): Result&lt;Translate&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UpsertHBaseController1905567228[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UpsertHBaseController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   iUpsert: IUpsert [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ binary(size: Integer): List&lt;UpsertBinary&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ complexData(): ExtractBo</TD></TR>
<TR><TD ALIGN="LEFT" >+ createUserLog(size: Integer): List&lt;UserLog&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ easyHashMap(size: Integer): List&lt;EasyHashMap&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ moreExtractBo(): MoreExtractBo</TD></TR>
<TR><TD ALIGN="LEFT" >+ upsert(size: Integer): List&lt;UserLog&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ upsertSize(size: Integer): List&lt;UserLog&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UserDetailService395865953[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UserDetailService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ createUser(loginUserBO: LoginUserBO)</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadUserById(userId: String): UserDetails</TD></TR>
<TR><TD ALIGN="LEFT" >+ loadUserByUsername(userName: String): UserDetails</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

UserRoleRepositoryImpl1237355193[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)UserRoleRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStoryUserRole(userId: Long, userRoleList: List&lt;UserRole&gt;)</TD></TR>
<TR><TD ALIGN="LEFT" >+ delete(userRole: UserRole): Result&lt;UserRole&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(userRole: UserRole): Result&lt;List&lt;UserRole&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(userRole: UserRole): Result&lt;UserRole&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(userRole: UserRole): Result&lt;UserRole&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

VideoRepositoryImpl1898693931[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)VideoRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchStory(videoList: List&lt;Video&gt;): Result&lt;Video&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findList(video: Video): Result&lt;List&lt;Video&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findOne(video: Video): Result&lt;Video&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ findPage(size: int, current: int, video: Video): Result&lt;LazyPage&lt;Video&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ remove(video: Video): Result&lt;Video&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ story(video: Video): Result&lt;Video&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_1701402758 { 
   	label=freamwork
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   HBaseController699419497[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)HBaseController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   hBaseOperation: HBaseOperation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   iUpsert: IUpsert [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyMysqlOperation: LazyMysqlOperation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   perfectLazyOperation: PerfectLazyOperation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ mysql2HBase()</TD></TR>
<TR><TD ALIGN="LEFT" >+ run(args: String...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveHBase(size: Integer): List&lt;HBaseUserBo&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

PicController699419497[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)PicController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ get(id: String, response: HttpServletResponse)</TD></TR>
<TR><TD ALIGN="LEFT" >+ list(): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ savePic(multipartFile: MultipartFile)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TestLazyOperationController699419497[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TestLazyOperationController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   consumerExecutor: SimpleAsyncTaskExecutor [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   lambdaStream: LazyLambdaStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   operationAutoFill: LazyOperationSmartAutoStuffed [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   perfectLazyOperation: PerfectLazyOperation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ delete()</TD></TR>
<TR><TD ALIGN="LEFT" >+ fillLazySysUser()</TD></TR>
<TR><TD ALIGN="LEFT" >+ insert()</TD></TR>
<TR><TD ALIGN="LEFT" >+ insertOne()</TD></TR>
<TR><TD ALIGN="LEFT" >+ page()</TD></TR>
<TR><TD ALIGN="LEFT" >+ run(args: String...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ saveSqlFile()</TD></TR>
<TR><TD ALIGN="LEFT" >+ scroll()</TD></TR>
<TR><TD ALIGN="LEFT" >+ select()</TD></TR>
<TR><TD ALIGN="LEFT" >+ showTables()</TD></TR>
<TR><TD ALIGN="LEFT" >+ smartUpsert()</TD></TR>
<TR><TD ALIGN="LEFT" >+ stuffedOnes()</TD></TR>
<TR><TD ALIGN="LEFT" >+ test()</TD></TR>
<TR><TD ALIGN="LEFT" >+ update()</TD></TR>
<TR><TD ALIGN="LEFT" >+ upsert()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_1806798576 { 
   	label=bionic
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   MusicController355829696[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MusicController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ run(args: String...)</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(multipartFile: MultipartFile)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

VocalizationService1380829258[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)VocalizationService</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addBytes(data1: byte[], data2: byte[]): byte[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ play(text: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ subByte(b: byte[], off: int, length: int): byte[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ textToByte(text: String): byte[]</TD></TR>
<TR><TD ALIGN="LEFT" >+ voiceData(): List&lt;ChineseCharacters&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

subgraph cluster_873762119 { 
   	label=smart
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   ApiController446693030[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ApiController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   apiApplication: ApiApplication [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ delete(id: String): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ page(applicationApiUo: ApplicationApiUo, size: int, current: int): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(apiQo: ApiQo): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ update(apiQo: ApiQo): Result</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ApiDownLinkMethodServiceImpl1407970424[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ApiDownLinkMethodServiceImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ save(apiDownLinkMethodQo: ApiDownLinkMethodQo): Result</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ApiServiceImpl1407970424[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ApiServiceImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lambda: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(apiQo: ApiQo): Result</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ApplicationController446693030[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ApplicationController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ deleteById(id: Long): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ findTables(applicationId: String): Result&lt;List&lt;DatabaseTableUo&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ main(args: String[])</TD></TR>
<TR><TD ALIGN="LEFT" >+ retrievePage(size: int, current: int, t: ApplicationUo): Result&lt;ApplicationUo&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ClassServiceImpl1407970424[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ClassServiceImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ save(clazz: Class): ClassUo</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ConsoleApplicationImpl1407970424[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ConsoleApplicationImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ sqlConsole(databaseInstanceId: Integer, tableSchema: String, sql: String): Result&lt;List&lt;List&lt;EasyHashMap&gt;&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ sqlConsoleUpsertExport(databaseInstanceId: Integer, tableSchema: String, sql: String): String</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DatabaseController446693030[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatabaseController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   databaseService: DatabaseApplication [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ list(schema: String, databaseInstanceId: Long): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ listLazyColumn(databaseInstanceId: Long, schema: String, tableName: String): Result</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DatabaseInstanceRepositoryImpl740103714[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatabaseInstanceRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   dynamicAdapter: DynamicAdapter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ switchInstance(instanceId: Long)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DatabaseInstanceServiceImpl1407970424[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatabaseInstanceServiceImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   dynamicAdapter: DynamicAdapter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   perfectLazyOperation: PerfectLazyOperation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   smartLazyOperation: SmartLazyOperation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ delete(id: Long): Result</TD></TR>
<TR><TD ALIGN="LEFT" >- initSchema(databaseInstanceUo: DatabaseInstanceUo)</TD></TR>
<TR><TD ALIGN="LEFT" >- initTable(databaseInstanceUo: DatabaseInstanceUo)</TD></TR>
<TR><TD ALIGN="LEFT" >+ list(databaseInstanceUo: DatabaseInstanceUo): Result&lt;List&lt;DatabaseInstanceUo&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ loading(): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ reload(id: Long): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(databaseInstanceUo: DatabaseInstanceUo): Result</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DatabaseInstanceTypeRepositoryImpl740103714[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatabaseInstanceTypeRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ findAll(): List&lt;DatabaseInstanceType&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DatabaseSchemaController446693030[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatabaseSchemaController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   databaseSchemaApplication: DatabaseSchemaApplication [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   dynamicAdapter: DynamicAdapter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchDeleteInstanceSchema(databaseSchemaDeleteCommandList: List&lt;DatabaseSchemaDeleteCommand&gt;): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ batchExportSchemaData(databaseSchemaDeleteCommandList: List&lt;DatabaseSchemaDeleteCommand&gt;): File</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteById(id: Long): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ reload(instanceId: Long, schema: String): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ retrieveAll(databaseSchemaUo: DatabaseSchemaUo): Result&lt;List&lt;DatabaseSchemaUo&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ retrievePage(size: int, current: int, databaseSchemaUo: DatabaseSchemaUo): Result&lt;DatabaseSchemaUo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(s: S): Result&lt;S&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DatabaseSchemaRepositoryImpl740103714[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatabaseSchemaRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   dynamicAdapter: DynamicAdapter [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   smartLazyOperation: SmartLazyOperation [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ reload(instanceId: Long, schema: String): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ retrievePage(size: int, current: int, databaseSchemaUo: DatabaseSchemaUo): Result&lt;DatabaseSchemaUo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ switchSchema(instanceId: Long, schema: String)</TD></TR>
<TR><TD ALIGN="LEFT" >+ switchSchemaRetrieve(databaseSchemaUo: DatabaseSchemaUo): Result&lt;List&lt;DatabaseSchemaUo&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ switchSchemaRetrievePage(size: int, current: int, databaseSchemaUo: DatabaseSchemaUo): Result&lt;DatabaseSchemaUo&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DatabaseServiceImpl1407970424[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatabaseServiceImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ listLazyColumn(databaseInstanceId: Long, schema: String, tableName: String): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ listTable(databaseInstanceId: Long, schema: String): Result</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DatabaseTableAutoStuffedRecordApplicationImpl1407970424[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatabaseTableAutoStuffedRecordApplicationImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   databaseInstanceRepository: DatabaseInstanceRepository [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   databaseSchemaRepository: DatabaseSchemaRepository [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   databaseTableAutoStuffedRecordRepository: DatabaseTableAutoStuffedRecordRepository [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyOperationSmartAutoStuffed: LazyOperationSmartAutoStuffed [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchSave(databaseTableAutoStuffedRecordCommand: DatabaseTableAutoStuffedRecordCommand): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(databaseTableAutoStuffedRecordUo: DatabaseTableAutoStuffedRecordUo): Result</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DatabaseTableAutoStuffedRecordRepositoryImpl740103714[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatabaseTableAutoStuffedRecordRepositoryImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ store(databaseTableAutoStuffedRecordUo: DatabaseTableAutoStuffedRecordUo)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DatabaseTableColumnApplicationImpl1407970424[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatabaseTableColumnApplicationImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   databaseInstanceRepository: DatabaseInstanceRepository [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ retrieveAllByTableName(instanceId: Long, tableSchema: String, tableName: String): Result&lt;List&lt;DatabaseTableColumnUo&gt;&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DatabaseTableColumnController446693030[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatabaseTableColumnController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   databaseTableColumnApplication: DatabaseTableColumnApplication [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ retrieveAllByTableIds(tableIds: List&lt;Long&gt;): Result&lt;List&lt;DatabaseTableColumnUo&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ retrieveAllByTableName(instanceId: Long, tableSchema: String, tableName: String): Result&lt;List&lt;DatabaseTableColumnUo&gt;&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DatabaseTableServiceImpl1407970424[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DatabaseTableServiceImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   databaseInstanceRepository: DatabaseInstanceRepository [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   lazySmartLazyOperation: LazySmartLazyOperation [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   operationConfig: LazyOperationConfig [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ batchDeleteTable(databaseTableCommandList: List&lt;DatabaseTableCommand&gt;): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ dataStorage(tableName: String, data: List&lt;EasyHashMap&gt;): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteTable(id: Long): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ deleteTable(instanceId: Long, tableSchema: String, tableName: String): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ exportInsertSql(databaseInstanceId: String, tableSchema: String, tableName: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ exportTableStructureExcel(databaseInstanceId: String, tableSchema: String, tableName: String): List&lt;LazyColumnEo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ exportUpsertSql(databaseInstanceId: String, tableSchema: String, tableName: String): String</TD></TR>
<TR><TD ALIGN="LEFT" >+ generateJavaModel(instanceId: Long, tableSchema: String, tableName: String): Result&lt;JavaModelDto&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ retrieveAll(databaseTableUo: DatabaseTableUo): Result&lt;List&lt;DatabaseTableUo&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ retrievePage(size: int, current: int, databaseTableUo: DatabaseTableUo): Result&lt;LazyPage&lt;DatabaseTableUo&gt;&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ storage(databaseTableUo: DatabaseTableUo, databaseTableColumnUoList: List&lt;DatabaseTableColumnUo&gt;): Result</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

DemandCodeGenerationServiceImpl1407970424[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)DemandCodeGenerationServiceImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   translate: TranslateApi [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ generation(table: TableConfigurationQo): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ generationTable(table: TableConfigurationQo): Result</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ProjectController446693030[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ProjectController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lambdaStream: LazyLambdaStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   projectService: ProjectApplication [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ deleteById(id: Long): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ dependency(dependencyUo: DependencyUo): Result</TD></TR>
<TR><TD ALIGN="LEFT" >+ retrievePage(size: int, current: int, projectUo: ProjectUo): Result&lt;ProjectUo&gt;</TD></TR>
<TR><TD ALIGN="LEFT" >+ save(project: ProjectUo): Result</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ProjectServiceImpl1407970424[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ProjectServiceImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   listClassService: TableClassApplication [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ save(project: ProjectUo): Result</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

ShortcutsController446693030[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ShortcutsController</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ data(): Result&lt;ShortcutsDataDTO&gt;</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TableClassServiceImpl1407970424[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TableClassServiceImpl</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   lazyLambdaStream: LazyLambdaStream [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ singleTable(projectId: Long, databaseInstanceId: Long, schema: String)</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
AbstractBuild1911961778 -> AbstractSelectBasicComparison777403285[arrowhead=none];
AbstractBuild1911961778 -> Condition53766133[label="select() -> setRowValue()"];
AbstractBuild1911961778 -> InternalLinkBuild1911961778[arrowhead=none, arrowtail=empty, dir=both];
AbstractBuild1911961778 -> LambdaBuild1911961778[arrowhead=none, arrowtail=empty, dir=both];
AbstractBuild1911961778 -> LazyTableStructureConverterFactory2019592261[label="update() -> dataStructure()"];
AbstractDynamicEasyUpsert998367306 -> DynamicEasyUpsert998367306[arrowhead=none, arrowtail=empty, dir=both];
AbstractInternalLinkSelectLazyLambdaStream1400174407 -> AbstractSimpleSelectLazyLambdaStream1400174407[arrowhead=none, arrowtail=empty, dir=both];
AbstractJavaReverseEngineering723278788 -> AbstractJavaReverseEngineeringImport723278788[arrowhead=none, arrowtail=empty, dir=both];
AbstractJavaReverseEngineeringImport723278788 -> AbstractJavaReverseEngineeringAnnotation723278788[arrowhead=none, arrowtail=empty, dir=both];
AbstractJavaReverseEngineeringImport723278788 -> DefaultDDDLazyApplication290109780[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultDDDLazyApplicationImpl290109780[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultDDDLazyAssembler290109780[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultDDDLazyCommand290109780[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultDDDLazyController290109780[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultDDDLazyDTO290109780[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultDDDLazyDomain290109780[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultDDDLazyDomainRepository290109780[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultDDDLazyEntity290109780[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultDDDLazyInfrastructureConverter290109780[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultDDDLazyInfrastructureEntity290109780[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultDDDLazyInfrastructureMapper290109780[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultDDDLazyInfrastructureMapperXml290109780[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultDDDLazyInfrastructurePersistence290109780[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultDDDLazyMapper290109780[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultDDDLazyMapperXml290109780[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultDDDLazyService290109780[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultDDDLazyServiceImpl290109780[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultFeignLazyAo375490719[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultFeignLazyApi375490719[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultFeignLazyApiRpc375490719[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultMVCLazyController290118986[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultMVCLazyEntity290118986[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultMVCLazyMapper290118986[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultMVCLazyMapperXml290118986[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultMVCLazyService290118986[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringImport723278788 -> DefaultMVCLazyServiceImpl290118986[label="initImportClassName() -> initImportClassName()"];
AbstractJavaReverseEngineeringMethod723278788 -> DefaultAbstractJavaReverseEngineeringMethod9775966[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyCrudProvider1054800114 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
AbstractLazyCrudRepository1054800114 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
AbstractLazyDDLOperationMethod1506107375 -> H2LazyOperationMethodPerfect252073952[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyDDLOperationMethod1506107375 -> H2LazyOperationMethodUpdateTable252073952[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyDDLOperationMethod1506107375 -> LazyOperationMethodCreateTable1506107375[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyDDLOperationMethod1506107375 -> LazyOperationMethodPerfect1506107375[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyDDLOperationMethod1506107375 -> LazyOperationMethodScriptRunner1506107375[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyDDLOperationMethod1506107375 -> LazyOperationMethodStringScriptRunner1506107375[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyDDLOperationMethod1506107375 -> LazyOperationMethodUpdateTable1506107375[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyDQLOperationMethod1506106972 -> AbstractLazyOperationMethod1753658515[arrowhead=none];
AbstractLazyDQLOperationMethod1506106972 -> LazyOperationMethodExecute1506106972[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyDQLOperationMethod1506106972 -> LazyOperationMethodExecuteOne1506106972[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyDQLOperationMethod1506106972 -> LazyOperationMethodExecuteSQL1506106972[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyDQLOperationMethod1506106972 -> LazyOperationMethodExecuteSQLForBean1506106972[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyDQLOperationMethod1506106972 -> LazyOperationMethodPage1506106972[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyDQLOperationMethod1506106972 -> LazyOperationMethodSelectList1506106972[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyOperationMethod1753658515 -> AbstractLazyDDLOperationMethod1506107375[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyOperationMethod1753658515 -> AbstractLazyDQLOperationMethod1506106972[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyOperationMethod1753658515 -> AbstractLazyTableEndpoint730853652[arrowhead=none];
AbstractLazyOperationMethod1753658515 -> DefaultLazyOperationMethod1753658515[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyOperationMethod1753658515 -> H2LazyOperationMethodPerfect252073952[label="execute() -> execute()"];
AbstractLazyOperationMethod1753658515 -> H2LazyOperationMethodUpdateTable252073952[label="execute() -> execute()"];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodCreateTable1506107375[label="execute() -> execute()"];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodDeleteById1506107096[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodDeleteByIdList1753658515[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodExecute1506106972[label="execute() -> execute()"];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodExecuteOne1506106972[label="execute() -> execute()"];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodExecuteSQL1506106972[label="execute() -> execute()"];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodExecuteSQLForBean1506106972[label="execute() -> execute()"];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodInsert1506107096[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodPage1506106972[label="execute() -> execute()"];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodPerfect1506107375[label="execute() -> execute()"];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodSaveOrUpdate1506107096[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodScriptRunner1506107375[label="execute() -> execute()"];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodSelectList1506106972[label="execute() -> execute()"];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodSelectOne1753658515[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodSmartUpsert1506107096[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodStringScriptRunner1506107375[label="execute() -> execute()"];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodUpdateAllById1753658515[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodUpdateById1753658515[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodUpdateTable1506107375[label="execute() -> execute()"];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodUpsert1506107096[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyOperationMethod1753658515 -> LazyOperationMethodUpsertRemoveNull1506107096[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyOperationMethod1753658515 -> LazyTableUtil1673108896[label="perfect() -> analyzeLazyTable()"];
AbstractLazyOperationMethod1753658515 -> PersistenceRepositoryFactory1505015926[label="loadSqlParameters() -> create()"];
AbstractLazyOperationMethod1753658515 -> SqlMessageFormatUtil1673108896[label="loadSqlParameters() -> format()"];
AbstractLazyOperationProxyRetryInvocationHandler1325750148 -> DefaultSqlCureSessionInterceptor238112549[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyOperationProxyRetryInvocationHandler1325750148 -> LazyDDLOperationProxy1325750148[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyOperationProxyRetryInvocationHandler1325750148 -> LazyDQLOperationProxy1325750148[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyOperationProxyRetryInvocationHandler1325750148 -> LazyOperationProxy1325750148[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyOperationProxyRetryInvocationHandler1325750148 -> SqlSessionInterceptor777942773[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyTableEndpoint730853652 -> ClassLazyTableEndpoint730853652[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyTableFieldEndpoint728169074 -> FieldLazyTableFieldEndpoint728169074[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyTableFieldEndpoint728169074 -> H2FieldLazyTableFieldEndpoint574492854[arrowhead=none, arrowtail=empty, dir=both];
AbstractLazyTableIndexEndpoint725250714 -> FieldLazyTableIndexEndpoint725250714[arrowhead=none, arrowtail=empty, dir=both];
AbstractProxyRetryInvocationHandler300698906 -> AbstractLazyOperationProxyRetryInvocationHandler1325750148[arrowhead=none, arrowtail=empty, dir=both];
AbstractSelectLazyLambdaStream1400174407 -> LazyLambdaStream590796285[arrowhead=none, arrowtail=empty, dir=both];
AbstractSimpleSelectLazyLambdaStream1400174407 -> AbstractSelectLazyLambdaStream1400174407[arrowhead=none, arrowtail=empty, dir=both];
AcwCodeRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
AcwLineCodeRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
AnnotationCodeRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
ApiController446693030 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
ApiDownLinkMethodServiceImpl1407970424 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
ApiServiceImpl1407970424 -> LazyLambdaStream590796285[label="lambda
[0..1]"];
ApplicationApiDownLinkMethodRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
ApplicationApiParamRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
ApplicationApiRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
ApplicationApiTableRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
ApplicationController446693030 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
ApplicationRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
ClassLazyTableEndpoint730853652 -> AbstractLazyTableFieldEndpoint728169074[arrowhead=none];
ClassLazyTableEndpoint730853652 -> AbstractLazyTableIndexEndpoint725250714[arrowhead=none];
ClassLazyTableEndpoint730853652 -> H2ClassLazyTableEndpoint574492854[arrowhead=none, arrowtail=empty, dir=both];
ClassLazyTableEndpoint730853652 -> H2FieldLazyTableFieldEndpoint574492854[label="createColumn() -> createColumn()", arrowhead=none];
ClassRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
ClassServiceImpl1407970424 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
ConsoleApplicationImpl1407970424 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
ConverterClass2KafkaSchema53368139 -> Field1192948023[label="converterClass2TargetJsonSchema() -> init()"];
CreateInfo1588919010 -> CreateField1588919010[label="createFieldList
[0..*]"];
DataBaseAddressRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
DatabaseController446693030 -> LazyLambdaStream590796285[label="lambdaStream
[0..1]"];
DatabaseInstanceRepositoryImpl740103714 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
DatabaseInstanceServiceImpl1407970424 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
DatabaseInstanceTypeRepositoryImpl740103714 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
DatabaseSchemaController446693030 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
DatabaseSchemaRepositoryImpl740103714 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
DatabaseServiceImpl1407970424 -> LazyLambdaStream590796285[label="lambdaStream
[0..1]"];
DatabaseTableAutoStuffedRecordApplicationImpl1407970424 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
DatabaseTableAutoStuffedRecordRepositoryImpl740103714 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
DatabaseTableColumnApplicationImpl1407970424 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
DatabaseTableColumnController446693030 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
DatabaseTableColumnRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
DatabaseTableRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
DatabaseTableServiceImpl1407970424 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> AbstractJavaReverseEngineeringAnnotation723278788[label="createJavaContextCode() -> initClassAnnotationPart()"];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> AbstractJavaReverseEngineeringClassName723278788[label="createJavaContextCode() -> initClassNamePart()"];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> AbstractJavaReverseEngineeringField723278788[label="createJavaContextCode() -> initClassFieldPart()"];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> AbstractJavaReverseEngineeringImport723278788[label="createJavaContextCode() -> initImportClassName()"];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> CamelAndUnderLineConverter1920362630[label="lowercaseFirstLetterTableName() -> lowercaseFirstLetter()"];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> ClassLazyTableEndpoint730853652[label="tableEndpoint
[0..1]"];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultDDDLazyApplication290109780[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultDDDLazyApplicationImpl290109780[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultDDDLazyAssembler290109780[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultDDDLazyCommand290109780[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultDDDLazyController290109780[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultDDDLazyDTO290109780[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultDDDLazyDomain290109780[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultDDDLazyDomainRepository290109780[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultDDDLazyEntity290109780[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultDDDLazyInfrastructureConverter290109780[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultDDDLazyInfrastructureEntity290109780[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultDDDLazyInfrastructureMapper290109780[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultDDDLazyInfrastructureMapperXml290109780[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultDDDLazyInfrastructurePersistence290109780[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultDDDLazyMapper290109780[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultDDDLazyMapperXml290109780[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultDDDLazyService290109780[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultDDDLazyServiceImpl290109780[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultFeignLazyAo375490719[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultFeignLazyApi375490719[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultFeignLazyApiRpc375490719[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultMVCLazyController290118986[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultMVCLazyEntity290118986[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultMVCLazyMapper290118986[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultMVCLazyMapperXml290118986[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultMVCLazyService290118986[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> DefaultMVCLazyServiceImpl290118986[arrowhead=none, arrowtail=empty, dir=both];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> FileUtil112403562[label="createJavaFile() -> createFileBufferedWriter()"];
DefaultAbstractJavaReverseEngineeringMethod9775966 -> ReverseEngineering306940328[label="reverseEngineering
[0..1]"];
DefaultDDDLazyApplication290109780 -> AbstractJavaReverseEngineeringClassName723278788[label="initClassNamePart() -> addClassNamePart()"];
DefaultDDDLazyApplicationImpl290109780 -> AbstractJavaReverseEngineeringAnnotation723278788[label="initClassAnnotationPart() -> addClassAnnotationPart()"];
DefaultDDDLazyApplicationImpl290109780 -> AbstractJavaReverseEngineeringClassName723278788[label="initClassNamePart() -> addClassNamePart()"];
DefaultDDDLazyApplicationImpl290109780 -> AbstractJavaReverseEngineeringField723278788[label="initClassFieldPart() -> addClassFieldPart()"];
DefaultDDDLazyAssembler290109780 -> AbstractJavaReverseEngineeringAnnotation723278788[arrowhead=none];
DefaultDDDLazyAssembler290109780 -> AbstractJavaReverseEngineeringClassName723278788[arrowhead=none];
DefaultDDDLazyAssembler290109780 -> AbstractJavaReverseEngineeringField723278788[arrowhead=none];
DefaultDDDLazyAssembler290109780 -> AbstractJavaReverseEngineeringImport723278788[arrowhead=none];
DefaultDDDLazyAssembler290109780 -> DefaultDDDLazyInfrastructureMapperXml290109780[label="generateClassDescribe() -> generateClassDescribe()", arrowhead=none];
DefaultDDDLazyAssembler290109780 -> DefaultDDDLazyMapperXml290109780[label="generateClassDescribe() -> generateClassDescribe()", arrowhead=none];
DefaultDDDLazyAssembler290109780 -> DefaultMVCLazyMapperXml290118986[label="generateClassDescribe() -> generateClassDescribe()", arrowhead=none];
DefaultDDDLazyCommand290109780 -> AbstractJavaReverseEngineeringClassName723278788[label="initClassNamePart() -> addClassNamePart()"];
DefaultDDDLazyCommand290109780 -> AbstractJavaReverseEngineeringField723278788[label="initClassFieldPart() -> addClassFieldPart()"];
DefaultDDDLazyController290109780 -> AbstractJavaReverseEngineeringField723278788[label="initClassFieldPart() -> addClassFieldPart()"];
DefaultDDDLazyDTO290109780 -> AbstractJavaReverseEngineeringClassName723278788[label="initClassNamePart() -> addClassNamePart()"];
DefaultDDDLazyDTO290109780 -> AbstractJavaReverseEngineeringField723278788[label="initClassFieldPart() -> addClassFieldPart()"];
DefaultDDDLazyDomain290109780 -> AbstractJavaReverseEngineeringClassName723278788[label="initClassNamePart() -> addClassNamePart()"];
DefaultDDDLazyDomain290109780 -> AbstractJavaReverseEngineeringField723278788[label="initClassFieldPart() -> addClassFieldPart()"];
DefaultDDDLazyEntity290109780 -> AbstractJavaReverseEngineeringAnnotation723278788[label="initClassAnnotationPart() -> initClassAnnotationPart()"];
DefaultDDDLazyInfrastructureConverter290109780 -> AbstractJavaReverseEngineeringClassName723278788[label="initClassNamePart() -> addClassNamePart()"];
DefaultDDDLazyInfrastructureEntity290109780 -> AbstractJavaReverseEngineeringClassName723278788[label="initClassNamePart() -> addClassNamePart()"];
DefaultDDDLazyInfrastructureEntity290109780 -> AbstractJavaReverseEngineeringField723278788[label="initClassFieldPart() -> initClassFieldPart()"];
DefaultDDDLazyInfrastructureMapper290109780 -> AbstractJavaReverseEngineeringAnnotation723278788[label="initClassAnnotationPart() -> addClassAnnotationPart()"];
DefaultDDDLazyInfrastructurePersistence290109780 -> AbstractJavaReverseEngineeringAnnotation723278788[label="initClassAnnotationPart() -> addClassAnnotationPart()"];
DefaultDDDLazyMapper290109780 -> AbstractJavaReverseEngineeringAnnotation723278788[label="initClassAnnotationPart() -> initClassAnnotationPart()"];
DefaultDDDLazyMapper290109780 -> AbstractJavaReverseEngineeringClassName723278788[label="initClassNamePart() -> initClassNamePart()"];
DefaultDDDLazyService290109780 -> AbstractJavaReverseEngineeringAnnotation723278788[label="initClassAnnotationPart() -> initClassAnnotationPart()"];
DefaultDDDLazyService290109780 -> AbstractJavaReverseEngineeringClassName723278788[label="initClassNamePart() -> addClassNamePart()"];
DefaultFeignLazyAo375490719 -> AbstractJavaReverseEngineeringField723278788[label="initClassFieldPart() -> initClassFieldPart()"];
DefaultFeignLazyApiRpc375490719 -> CamelAndUnderLineConverter1920362630[label="initClassAnnotationPart() -> humpToArray()"];
DefaultLazyOperationMethod1753658515 -> MySQLEasyUpsertSink260969305[arrowhead=none, arrowtail=empty, dir=both];
DefaultMVCLazyController290118986 -> CamelAndUnderLineConverter1920362630[label="initClassAnnotationPart() -> humpToArray()"];
DefaultMVCLazyEntity290118986 -> AbstractJavaReverseEngineeringAnnotation723278788[label="initClassAnnotationPart() -> initClassAnnotationPart()"];
DefaultMVCLazyFactory290118986 -> AbstractJavaReverseEngineering723278788[arrowhead=none];
DefaultMVCLazyMapper290118986 -> AbstractJavaReverseEngineeringAnnotation723278788[label="initClassAnnotationPart() -> initClassAnnotationPart()"];
DefaultMVCLazyMapper290118986 -> AbstractJavaReverseEngineeringClassName723278788[label="initClassNamePart() -> initClassNamePart()"];
DefaultMVCLazyService290118986 -> AbstractJavaReverseEngineeringAnnotation723278788[label="initClassAnnotationPart() -> initClassAnnotationPart()"];
DefaultMVCLazyService290118986 -> AbstractJavaReverseEngineeringClassName723278788[label="initClassNamePart() -> addClassNamePart()"];
DefaultTableAdapter1961326352 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
DefaultUserDetailsService1517514367 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
DemandCodeGenerationServiceImpl1407970424 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
DependencyRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
DictionaryDataRepositoryImpl1237355193 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
DictionaryRepositoryImpl1237355193 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
DocPdfMergeRepositoryImpl1070865722 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
DwaFinDimRegionarea2RepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
DynamicEasyUpsert998367306 -> MySQLEasyUpsertSink260969305[label="iEasyUpsertList
[0..*]", arrowhead=none];
DynamicEasyUpsert998367306 -> MySQLEasyUpsertSink260969305[label="iEasyUpsertMap
[0..*]", arrowhead=none];
DynamicLazyDSAdapter504710133 -> DynamicLazyDSContextHolder1847737669[label="determineDataSource() -> peek()"];
EasySmartConverterAbstract1993642178 -> EasySmartFillFieldConverterAbstract1993642178[arrowhead=none, arrowtail=empty, dir=both];
EasySmartFillFieldConverter1993642178 -> EasySmartConverterAbstract1993642178[arrowhead=none];
EasySmartFillFieldConverter1993642178 -> EasySmartFillFieldConverterAbstract1993642178[arrowhead=none];
EasySmartFillFieldConverter1993642178 -> ElasticsearchEasyUpsert643245416[arrowhead=none];
EasySmartFillFieldConverter1993642178 -> FileUtil112403562[label="targetClassWriteAttributeFieldList() -> createFileBufferedWriter()"];
EasySmartFillFieldConverterAbstract1993642178 -> EasySmartFillFieldConverter1993642178[arrowhead=none, arrowtail=empty, dir=both];
EasySmartFillFieldConverterAbstract1993642178 -> LazyTableUtil1673108896[label="smartFillField() -> analyzeLazyTable()"];
ElasticsearchEasyUpsert643245416 -> EasySmartConverterAbstract1993642178[arrowhead=none];
ElasticsearchEasyUpsert643245416 -> EasySmartFillFieldConverter1993642178[arrowhead=none];
ElasticsearchEasyUpsert643245416 -> EasySmartFillFieldConverterAbstract1993642178[arrowhead=none];
ElasticsearchEasyUpsert643245416 -> HBaseOperationMethodAbstract352028538[arrowhead=none];
ElasticsearchEasyUpsert643245416 -> HBaseUpsertSink260969305[arrowhead=none];
ElasticsearchEasyUpsert643245416 -> KafkaEasyUpsertSink260969305[arrowhead=none];
ElasticsearchEasyUpsert643245416 -> MySQLEasyUpsertSink260969305[arrowhead=none];
ElasticsearchEasyUpsert643245416 -> PulsarEasyUpsertSink260969305[arrowhead=none];
ElasticsearchEasyUpsert643245416 -> RedisSearchUpsertSink643245416[arrowhead=none];
ElasticsearchEasyUpsert643245416 -> RedisUpsertSink643245416[arrowhead=none];
ElasticsearchEasyUpsert643245416 -> SpringBootElasticsearchConfigProperties1110532031[label="elasticsearchProperties
[0..1]"];
ElasticsearchEasyUpsert643245416 -> SpringUpsertAutoConfigure1110532031[label="springUpsertAutoConfigure
[0..1]"];
ElasticsearchEasyUpsert643245416 -> UpsertHBaseController1905567228[arrowhead=none];
FieldRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
FileProvider1513367013 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
FileRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
HBaseController699419497 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
HBaseLayerAnalyze1383119070 -> HBaseFieldAnalyze1383119070[arrowhead=none];
HBaseLayerAnalyze1383119070 -> HBaseOperationMethodAbstract352028538[arrowhead=none, arrowtail=empty, dir=both];
HBaseLayerAnalyze1383119070 -> LayerFieldAnalyze653387000[arrowhead=none];
HBaseLayerAnalyze1383119070 -> LayerMethodAnalyze653387000[arrowhead=none];
HBaseLayerAnalyze1383119070 -> SQLConverter1453923838[label="upsertPreparedStatementSQL() -> upsertPreparedStatementSQL()", arrowhead=none];
HBaseOperationMethodAbstract352028538 -> AnalyzeField653387000[label="UNIQUE_FIELD
[0..*]"];
HBaseOperationMethodAbstract352028538 -> HBaseOperationInsertListMethod352028538[arrowhead=none, arrowtail=empty, dir=both];
HBaseOperationMethodAbstract352028538 -> HBaseOperationInsertMethod352028538[arrowhead=none, arrowtail=empty, dir=both];
HBaseOperationMethodAbstract352028538 -> HBaseOperationUpsertListMethod352028538[arrowhead=none, arrowtail=empty, dir=both];
HBaseOperationMethodAbstract352028538 -> HBaseOperationUpsertMethod352028538[arrowhead=none, arrowtail=empty, dir=both];
HBaseOperationProxy2092719285 -> ElasticsearchEasyUpsert643245416[label="HBASE_OPERATION_METHOD_MAP
[0..*]", arrowhead=none];
HBaseOperationProxy2092719285 -> ElasticsearchEasyUpsert643245416[label="hBaseOperationMethodList
[0..*]", arrowhead=none];
HBaseUpsertSink260969305 -> SpringUpsertAutoConfigure1110532031[label="springUpsertAutoConfigure
[0..1]"];
InterfaceProvider300835036 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
InterfaceRepositoryImpl1237355193 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
JdbcTokenStore165425348 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
JsonFileConverter53368139 -> CamelAndUnderLineConverter1920362630[label="parseBean2map() -> humpToLine2()"];
JsonFileConverter53368139 -> EasyAnnotationConverter1240898002[label="parseBean2map() -> annotationConvertConversion()"];
KafkaEasyUpsertSink260969305 -> ConverterClass2KafkaSchema53368139[label="upsert() -> converterClass2TargetJsonSchema()"];
KafkaEasyUpsertSink260969305 -> DefaultClassSchema111879186[arrowhead=none];
KafkaEasyUpsertSink260969305 -> DefaultUserConvertService111879186[arrowhead=none];
KafkaEasyUpsertSink260969305 -> EasyAnnotationConverter1240898002[label="upsert() -> collectionConvert()"];
KafkaEasyUpsertSink260969305 -> EasyHashMap1993642178[arrowhead=none];
KafkaEasyUpsertSink260969305 -> EasyUpsertExtractKafkaProducer260969305[label="easyUpsertExtractKafkaProducer
[0..1]"];
KafkaEasyUpsertSink260969305 -> JsonFileConverter53368139[label="upsert() -> parseBean2map()"];
KafkaEasyUpsertSink260969305 -> KafkaJsonMessage2081345617[label="upsert() -> newInstance()"];
KafkaEasyUpsertSink260969305 -> LocalStorageClassAnnotation503400880[label="upsert() -> getEasyTableAnnotation()"];
KafkaEasyUpsertSink260969305 -> SpringUpsertAutoConfigure1110532031[label="springUpsertAutoConfigure
[0..1]"];
KafkaJsonMessage2081345617 -> TargetJsonSchema2081345617[label="schema
[0..1]"];
LazyDDLOperationProxy1325750148 -> AbstractLazyDDLOperationMethod1506107375[label="lazyDDLOperationMethodList
[0..*]", arrowhead=none];
LazyDDLOperationProxy1325750148 -> AbstractLazyDQLOperationMethod1506106972[label="LAZY_OPERATION_DDL_METHOD_MAP
[0..*]", arrowhead=none];
LazyDQLOperationProxy1325750148 -> AbstractLazyDQLOperationMethod1506106972[label="LAZY_OPERATION_DQL_METHOD_MAP
[0..*]", arrowhead=none];
LazyLambdaStream590796285 -> AbstractBuild1911961778[arrowhead=none];
LazyLambdaStream590796285 -> AbstractInternalLinkSelectLazyLambdaStream1400174407[arrowhead=none];
LazyLambdaStream590796285 -> AbstractSelectLazyLambdaStream1400174407[arrowhead=none];
LazyLambdaStream590796285 -> AbstractSimpleDeleteLazyLambdaStream970737654[arrowhead=none];
LazyLambdaStream590796285 -> AbstractSimpleSelectLazyLambdaStream1400174407[arrowhead=none];
LazyLambdaStream590796285 -> AbstractSimpleUpdateLazyLambdaStream1467349780[arrowhead=none];
LazyOperationMethodSmartUpsert1506107096 -> H2LazyOperationMethodSmartUpsert252073952[arrowhead=none, arrowtail=empty, dir=both];
LazyOperationMethodUpsert1506107096 -> H2LazyOperationMethodUpsert252073952[arrowhead=none, arrowtail=empty, dir=both];
LazyOperationMethodUpsertRemoveNull1506107096 -> H2LazyOperationMethodUpsertRemoveNull252073952[arrowhead=none, arrowtail=empty, dir=both];
LazyOperationProxy1325750148 -> AbstractLazyDQLOperationMethod1506106972[label="LAZY_OPERATION_METHOD_MAP
[0..*]", arrowhead=none];
LazyOperationProxy1325750148 -> AbstractLazyDQLOperationMethod1506106972[label="lazyOperationMethods
[0..*]", arrowhead=none];
LazyOperationSmartAutoStuffed470746827 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
LazySmartLazyOperation470746827 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
LazyTableFieldUtil1673108896 -> CamelAndUnderLineConverter1920362630[label="analyzeFieldOnAnnotation() -> humpToLine2()"];
LazyTableFieldUtil1673108896 -> LazyTableIndexUtil1673108896[label="analyzeFieldOnAnnotation() -> analyzeFieldIndex()"];
LazyTableStructureConverterFactory2019592261 -> EasyHashMap1993642178[label="wrapperEasyHashMap() -> toEasyTableAnnotation()"];
LazyTableStructureConverterFactory2019592261 -> LazyTableUtil1673108896[label="wrapperBean() -> analyzeLazyTable()"];
LazyTableUpsertConverterFactory2019592261 -> BinHexSwitchUtil112403562[label="insert() -> bytesToHexSql()"];
LazyTableUpsertConverterFactory2019592261 -> EasyAnnotationConverter1240898002[label="insert() -> annotationConvertConversion()"];
LazyTableUpsertConverterFactory2019592261 -> LazyTableStructureConverterFactory2019592261[label="insert() -> dataStructure()"];
LazyTableUtil1673108896 -> LazyTableFieldUtil1673108896[label="analyzeLazyTable() -> analyzeFieldOnAnnotation()"];
MAdsFinDwsjyyQuanxianCwryxxbRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
MDimFinDwsjyyQuanxianDwysqdbRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
MDimFinDwsjyyQuanxianQsryxxRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
MSysLogNothingUserRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
MSysLoginRecordRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
MenuRepositoryImpl1237355193 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
MethodRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
MusicController355829696 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
MusicProvider1513367013 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
MusicRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
MySQLEasyUpsertSink260969305 -> AbstractLazyOperationMethod1753658515[label="execute() -> perfect()"];
MySQLEasyUpsertSink260969305 -> DynamicLazyDSAdapter504710133[label="dynamicLazyDSAdapter
[0..1]"];
MySQLEasyUpsertSink260969305 -> EasyAnnotationConverter1240898002[label="execute() -> collectionConvert()"];
MySQLEasyUpsertSink260969305 -> ElasticsearchEasyUpsert643245416[arrowhead=none];
MySQLEasyUpsertSink260969305 -> HBaseUpsertSink260969305[arrowhead=none];
MySQLEasyUpsertSink260969305 -> KafkaEasyUpsertSink260969305[arrowhead=none];
MySQLEasyUpsertSink260969305 -> LazyLambdaStream590796285[arrowhead=none];
MySQLEasyUpsertSink260969305 -> LazyTableStructure1673649790[label="execute() -> schema()"];
MySQLEasyUpsertSink260969305 -> LazyTableStructureConverterFactory2019592261[label="execute() -> dataStructure()"];
MySQLEasyUpsertSink260969305 -> LazyTableUpsertConverterFactory2019592261[label="execute() -> upsert()"];
MySQLEasyUpsertSink260969305 -> PulsarEasyUpsertSink260969305[arrowhead=none];
MySQLEasyUpsertSink260969305 -> RedisSearchUpsertSink643245416[arrowhead=none];
MySQLEasyUpsertSink260969305 -> RedisUpsertSink643245416[arrowhead=none];
MySQLEasyUpsertSink260969305 -> SpringUpsertAutoConfigure1110532031[label="springUpsertAutoConfigure
[0..1]"];
MySQLEasyUpsertSink260969305 -> UpsertHBaseController1905567228[arrowhead=none];
PerfectLazyOperation470746827 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
PicController699419497 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
ProjectController446693030 -> LazyLambdaStream590796285[label="lambdaStream
[0..1]"];
ProjectRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
ProjectServiceImpl1407970424 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
PulsarEasyUpsertSink260969305 -> CamelAndUnderLineConverter1920362630[label="upsert() -> humpToLine2()"];
PulsarEasyUpsertSink260969305 -> SpringUpsertAutoConfigure1110532031[label="configure
[0..1]"];
RedisSearchUpsertSink643245416 -> CamelAndUnderLineConverter1920362630[label="upsert() -> humpToLine2()"];
RedisSearchUpsertSink643245416 -> LazyRedisTemplate2037199553[label="lazyRedisTemplate
[0..1]"];
RedisSearchUpsertSink643245416 -> SpringUpsertAutoConfigure1110532031[label="springUpsertAutoConfigure
[0..1]"];
RedisUpsertSink643245416 -> CamelAndUnderLineConverter1920362630[label="upsert() -> humpToLine2()"];
RedisUpsertSink643245416 -> DefaultFieldSchema111879186[arrowhead=none];
RedisUpsertSink643245416 -> LazyRedisTemplate2037199553[label="lazyRedisTemplate
[0..1]"];
RedisUpsertSink643245416 -> SpringUpsertAutoConfigure1110532031[label="springUpsertAutoConfigure
[0..1]"];
ReverseEngineering306940328 -> ReverseEngineeringMvc306940328[label="reverseEngineeringMvc
[0..1]"];
RoleMenuRepositoryImpl1237355193 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
RoleProvider300835036 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
RoleRepositoryImpl1237355193 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
ShortcutsController446693030 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
SqlAuditRepositoryImpl541041143 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
StructureProvider495104145 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
SysGeneratorService2024401798 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
SysUserRepositoryImpl1237355193 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
SysUserTempRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
TableClassRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
TableClassServiceImpl1407970424 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
TestLazyOperationController699419497 -> LazyLambdaStream590796285[label="lambdaStream
[0..1]"];
TranslateProvider1513367013 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
TranslateRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
UserDetailService395865953 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
UserRoleRepositoryImpl1237355193 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
VideoRepositoryImpl1898693931 -> LazyLambdaStream590796285[label="lazyLambdaStream
[1]"];
VocalizationService1380829258 -> LazyLambdaStream590796285[label="lazyLambdaStream
[0..1]"];
    
}
@enduml