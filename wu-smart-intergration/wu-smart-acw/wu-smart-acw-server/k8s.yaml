---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    k8s.eip.work/displayName: 前端
    k8s.eip.work/ingress: 'false'
    k8s.eip.work/service: NodePort
    k8s.eip.work/workload: web-nginx
  labels:
    k8s.eip.work/layer: web
    k8s.eip.work/name: web-nginx
    k8s.kuboard.cn/name: web-nginx
  name: web-nginx
  namespace: default
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s.eip.work/layer: web
      k8s.eip.work/name: web-nginx
  serviceName: web-nginx
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: '2022-10-21T19:24:31+08:00'
      labels:
        k8s.eip.work/layer: web
        k8s.eip.work/name: web-nginx
    spec:
      containers:
        - image: 'nginx:1.13.0-alpine'
          imagePullPolicy: IfNotPresent
          name: nginx
          resources:
            limits:
              memory: 10Mi
            requests:
              memory: 5Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              name: default-conf
              subPath: default.conf
            - mountPath: /etc/nginx/nginx.conf
              name: nginx-conf
              subPath: nginx.conf
            - mountPath: /etc/localtime
              name: tz
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: default-conf
                path: default.conf
            name: nginx-cnf
          name: default-conf
        - configMap:
            defaultMode: 420
            items:
              - key: nginx-conf
                path: nginx.conf
            name: nginx-cnf
          name: nginx-conf
        - hostPath:
            path: /usr/share/zoneinfo/Asia/Shanghai
            type: File
          name: tz
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate

---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    k8s.eip.work/layer: web
    k8s.eip.work/name: web-nginx
    k8s.kuboard.cn/name: web-nginx
  name: web-nginx
  namespace: default
spec:
  ipFamilyPolicy: SingleStack
  ports:
    - name: hdn4dd
      nodePort: 520
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    k8s.eip.work/layer: web
    k8s.eip.work/name: web-nginx
  sessionAffinity: None
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    k8s.kuboard.cn/displayName: wu-smart-acw-ui
  labels:
    k8s.kuboard.cn/layer: web
    k8s.kuboard.cn/name: wu-smart-acw-ui
  name: wu-smart-acw-ui
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s.kuboard.cn/layer: web
      k8s.kuboard.cn/name: wu-smart-acw-ui
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s.kuboard.cn/layer: web
        k8s.kuboard.cn/name: wu-smart-acw-ui
    spec:
      containers:
        - image: >-
            registry.cn-hangzhou.aliyuncs.com/wu-lazy/wu-smart-acw-server:ui-master
          imagePullPolicy: Always
          name: wu-smart-acw-ui
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    k8s.kuboard.cn/layer: web
    k8s.kuboard.cn/name: wu-smart-acw-ui
  name: wu-smart-acw-ui
  namespace: default
spec:
  ipFamilyPolicy: SingleStack
  ports:
    - name: eiaxcb
      nodePort: 4900
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    k8s.kuboard.cn/layer: web
    k8s.kuboard.cn/name: wu-smart-acw-ui
  sessionAffinity: None
  type: NodePort

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    k8s.kuboard.cn/displayName: 【wu-smart-acw-server】后台服务端
  labels:
    k8s.kuboard.cn/layer: svc
    k8s.kuboard.cn/name: wu-smart-acw-server
  name: wu-smart-acw-server
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s.kuboard.cn/layer: svc
      k8s.kuboard.cn/name: wu-smart-acw-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s.kuboard.cn/layer: svc
        k8s.kuboard.cn/name: wu-smart-acw-server
    spec:
      containers:
        - env:
            - name: MAIN_DB_HOST
              value: '124.222.48.62:3306'
            - name: JAVA_OPTS
              value: '-Xms128m -Xmx256m'
          image: >-
            registry.cn-hangzhou.aliyuncs.com/wu-lazy/wu-smart-acw-server:1.2.2-JDK17-SNAPSHOT
          imagePullPolicy: Always
          name: wu-smart-acw-server
          resources:
            limits:
              memory: 512Mi
            requests:
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    k8s.kuboard.cn/layer: svc
    k8s.kuboard.cn/name: wu-smart-acw-server
  name: wu-smart-acw-server
  namespace: default
spec:
  ipFamilyPolicy: SingleStack
  ports:
    - name: ikr7he
      port: 18080
      protocol: TCP
      targetPort: 18080
  selector:
    k8s.kuboard.cn/layer: svc
    k8s.kuboard.cn/name: wu-smart-acw-server
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: v1
data:
  default-conf: |-
    server {
    listen       80;
    server_name  localhost;
    client_max_body_size 200M;
    location ^~/ {
      proxy_pass http://web.yk.bytedad.cn;
    }

    location ^~/wu-smart-acw-ui/ {
      proxy_next_upstream error timeout invalid_header http_500 http_503;
      proxy_pass  http://wu-smart-acw-ui:80/;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header   Host             $host:$proxy_port;
      proxy_set_header   X-Real-IP        $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_redirect     off;
      proxy_connect_timeout      300;
      proxy_send_timeout         300;
      proxy_read_timeout         300;
      #proxy_send_lowat          12000;
      proxy_buffer_size          128k;
      proxy_buffers              8 64k;
      proxy_busy_buffers_size    128k;
      proxy_temp_file_write_size 128k;
    }
    # acw-server
      location /acw-server/ {
      proxy_pass http://wu-smart-acw-server:18080/;
      proxy_set_header Host $host:520;
    }
    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }}
  nginx-conf: |-
    user  root;
    worker_processes  1;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        underscores_in_headers on;

        include /etc/nginx/conf.d/*.conf;
    }
kind: ConfigMap
metadata:
  name: nginx-cnf
  namespace: default

---
apiVersion: v1
data:
  cnf: >-
    [mysql]

    no-auto-rehash

    [mysqld]

    skip-host-cache
    skip-name-resolve
    max_connections=1000
    lower_case_table_names=0
    default-time-zone='+08:00'
    sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION'
    log_timestamps='SYSTEM'
    slow_query_log=ON
    binlog_expire_logs_seconds = 2
    innodb_flush_log_at_trx_commit=2
    group_concat_max_len=1024
kind: ConfigMap
metadata:
  name: mysql-cnf
  namespace: default

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    analysis.crane.io/replicas-recommendation: |
      replicas: 1
    analysis.crane.io/resource-recommendation: |
      containers:
      - containerName: mysql
        target:
          cpu: 229m
          memory: 2070Mi
    k8s.eip.work/displayName: 数据库
    k8s.eip.work/ingress: 'false'
    k8s.eip.work/service: NodePort
    k8s.eip.work/workload: cloud-mysql
    k8s.kuboard.cn/workload: cloud-mysql
  labels:
    k8s.eip.work/layer: db
    k8s.eip.work/name: cloud-mysql
    k8s.kuboard.cn/name: cloud-mysql
  name: cloud-mysql
  namespace: default
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s.eip.work/layer: db
      k8s.eip.work/name: cloud-mysql
      k8s.kuboard.cn/name: cloud-mysql
  serviceName: cloud-mysql
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/restartedAt: '2023-10-07T09:38:51+08:00'
      labels:
        k8s.eip.work/layer: db
        k8s.eip.work/name: cloud-mysql
        k8s.kuboard.cn/name: cloud-mysql
    spec:
      containers:
        - env:
            - name: MYSQL_ROOT_PASSWORD
              value: wujiawei
          image: 'mysql:8.0.28'
          imagePullPolicy: Always
          name: mysql
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 500m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-data
            - mountPath: /etc/mysql/conf.d/custom.cnf
              name: mysql-cnf-map
              subPath: custom.cnf
            - mountPath: /etc/localtime
              name: tz
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: cnf
                path: custom.cnf
            name: mysql-cnf
          name: mysql-cnf-map
        - hostPath:
            path: /usr/share/zoneinfo/Asia/Shanghai
            type: File
          name: tz
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        annotations:
          k8s.eip.work/pvcType: Dynamic
        name: mysql-data
      spec:
        accessModes:
          - ReadWriteMany
        resources:
          requests:
            storage: 10Gi
        storageClassName: nfs-storage
        volumeMode: Filesystem

---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    k8s.eip.work/layer: db
    k8s.eip.work/name: cloud-mysql
    k8s.kuboard.cn/name: cloud-mysql
  name: cloud-mysql
  namespace: default
spec:
  ports:
    - name: zmac2s
      nodePort: 30512
      port: 3306
      protocol: TCP
      targetPort: 3306
  selector:
    k8s.eip.work/layer: db
    k8s.eip.work/name: cloud-mysql
  sessionAffinity: None
  type: NodePort


