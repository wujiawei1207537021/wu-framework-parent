---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    k8s.kuboard.cn/displayName: zookeeper
  labels:
    k8s.kuboard.cn/name: zookeeper
  name: zookeeper
  namespace: kafka
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s.kuboard.cn/name: zookeeper
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s.kuboard.cn/name: zookeeper
    spec:
      containers:
        - env:
            - name: TZ
              value: Asia/Shanghai
          image: wurstmeister/zookeeper
          imagePullPolicy: Always
          name: zookeeper
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    k8s.kuboard.cn/name: zookeeper
  name: zookeeper
  namespace: kafka
spec:
  clusterIP: 10.99.35.171
  clusterIPs:
    - 10.99.35.171
  externalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: hsy8af
      nodePort: 2181
      port: 2181
      protocol: TCP
      targetPort: 2181
  selector:
    k8s.kuboard.cn/name: zookeeper
  sessionAffinity: None
  type: NodePort


---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    k8s.kuboard.cn/displayName: kafka-server
  labels:
    k8s.kuboard.cn/name: kafka-server
  name: kafka-server
  namespace: kafka
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s.kuboard.cn/name: kafka-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s.kuboard.cn/name: kafka-server
    spec:
      containers:
        - env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: 'zookeeper:2181'
            - name: KAFKA_ADVERTISED_LISTENERS1
              value: 'PLAINTEXT://kafka-server:9092'
            - name: KAFKA_LISTENERS
              value: 'PLAINTEXT://0.0.0.0:9092'
            - name: TZ
              value: Asia/Shanghai
            - name: KAFKA_BROKER_ID
              value: '0'
            - name: KAFKA_ADVERTISED_LISTENERS
              value: 'PLAINTEXT://192.168.17.186:9092'
          image: wurstmeister/kafka
          imagePullPolicy: IfNotPresent
          name: kafka-server
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels:
    k8s.kuboard.cn/name: kafka-server
  name: kafka-server
  namespace: kafka
spec:
  ipFamilyPolicy: SingleStack
  ports:
    - name: faphkp
      nodePort: 9092
      port: 9092
      protocol: TCP
      targetPort: 9092
  selector:
    k8s.kuboard.cn/name: kafka-server
  sessionAffinity: None
  type: NodePort

