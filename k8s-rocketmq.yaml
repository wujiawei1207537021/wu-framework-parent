---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    k8s.kuboard.cn/displayName: cloud-rocket
  labels:
    k8s.kuboard.cn/layer: cloud
    k8s.kuboard.cn/name: cloud-rocket
  name: cloud-rocket
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s.kuboard.cn/layer: cloud
      k8s.kuboard.cn/name: cloud-rocket
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s.kuboard.cn/layer: cloud
        k8s.kuboard.cn/name: cloud-rocket
    spec:
      containers:
        - args:
            - mqnamesrv
          command:
            - sh
          image: apache/rocketmq
          imagePullPolicy: Always
          name: cloud-rocket-ns
          ports:
            - containerPort: 9876
              hostPort: 9876
              protocol: TCP
          resources: { }
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
            - mqbroker
          command:
            - sh
          env:
            - name: NAMESRV_ADDR
              value: 'cloud-rocket:9876'
            - name: JAVA_OPT_EXT
              value: '-server -Xms128m -Xmx128m -Xmn128m'
          image: apache/rocketmq
          imagePullPolicy: Always
          name: cloud-rocket-broker
          resources: { }
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: { }
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  annotations: { }
  labels:
    k8s.kuboard.cn/layer: cloud
    k8s.kuboard.cn/name: cloud-rocket
  name: cloud-rocket
  namespace: default
spec:
  internalTrafficPolicy: Cluster
  ipFamilyPolicy: SingleStack
  ports:
    - name: ha4ynj
      port: 9876
      protocol: TCP
      targetPort: 9876
  selector:
    k8s.kuboard.cn/layer: cloud
    k8s.kuboard.cn/name: cloud-rocket
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: { }
  labels:
    k8s.kuboard.cn/layer: cloud
    k8s.kuboard.cn/name: rocketmq-console-ng
  name: rocketmq-console-ng
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s.kuboard.cn/layer: cloud
      k8s.kuboard.cn/name: rocketmq-console-ng
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s.kuboard.cn/layer: cloud
        k8s.kuboard.cn/name: rocketmq-console-ng
    spec:
      containers:
        - env:
            - name: JAVA_OPTS
              value: >-
                -Drocketmq.namesrv.addr=cloud-rocket:9876
                -Dcom.rocketmq.sendMessageWithVIPChannel=false
          image: styletang/rocketmq-console-ng
          imagePullPolicy: Always
          name: rocketmq-console-ng
          resources: { }
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: { }
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  annotations: { }
  labels:
    k8s.kuboard.cn/layer: cloud
    k8s.kuboard.cn/name: rocketmq-console-ng
  name: rocketmq-console-ng
  namespace: default
spec:
  internalTrafficPolicy: Cluster
  ipFamilyPolicy: SingleStack
  ports:
    - name: jf6skm
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    k8s.kuboard.cn/layer: cloud
    k8s.kuboard.cn/name: rocketmq-console-ng
  sessionAffinity: None
  type: ClusterIP

